2025-08-15 18:03:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:03:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:03:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:03:07,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:06:29,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:06:29,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:06:29,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:06:29,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:06:34,848:INFO:PyCaret ClassificationExperiment
2025-08-15 18:06:34,849:INFO:Logging name: clf-default-name
2025-08-15 18:06:34,849:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-15 18:06:34,849:INFO:version 3.3.2
2025-08-15 18:06:34,849:INFO:Initializing setup()
2025-08-15 18:06:34,849:INFO:self.USI: 6eb3
2025-08-15 18:06:34,849:INFO:self._variable_keys: {'X', 'fold_shuffle_param', 'exp_id', 'USI', 'idx', 'seed', '_available_plots', 'pipeline', 'log_plots_param', 'gpu_n_jobs_param', 'target_param', 'exp_name_log', 'fix_imbalance', 'data', 'fold_generator', 'y', 'y_test', 'y_train', 'logging_param', 'X_test', 'is_multiclass', 'fold_groups_param', '_ml_usecase', 'gpu_param', 'html_param', 'memory', 'n_jobs_param', 'X_train'}
2025-08-15 18:06:34,849:INFO:Checking environment
2025-08-15 18:06:34,849:INFO:python_version: 3.9.23
2025-08-15 18:06:34,849:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-15 18:06:34,849:INFO:machine: AMD64
2025-08-15 18:06:34,870:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-15 18:06:34,874:INFO:Memory: svmem(total=8458973184, available=697085952, percent=91.8, used=7761887232, free=697085952)
2025-08-15 18:06:34,874:INFO:Physical Core: 2
2025-08-15 18:06:34,874:INFO:Logical Core: 4
2025-08-15 18:06:34,874:INFO:Checking libraries
2025-08-15 18:06:34,874:INFO:System:
2025-08-15 18:06:34,874:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-15 18:06:34,874:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-15 18:06:34,874:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-15 18:06:34,874:INFO:PyCaret required dependencies:
2025-08-15 18:06:35,186:INFO:                 pip: 25.1
2025-08-15 18:06:35,186:INFO:          setuptools: 78.1.1
2025-08-15 18:06:35,187:INFO:             pycaret: 3.3.2
2025-08-15 18:06:35,187:INFO:             IPython: 8.18.1
2025-08-15 18:06:35,187:INFO:          ipywidgets: 8.1.7
2025-08-15 18:06:35,187:INFO:                tqdm: 4.67.1
2025-08-15 18:06:35,187:INFO:               numpy: 1.26.4
2025-08-15 18:06:35,187:INFO:              pandas: 2.1.4
2025-08-15 18:06:35,187:INFO:              jinja2: 3.1.6
2025-08-15 18:06:35,187:INFO:               scipy: 1.11.4
2025-08-15 18:06:35,187:INFO:              joblib: 1.5.1
2025-08-15 18:06:35,187:INFO:             sklearn: 1.4.2
2025-08-15 18:06:35,187:INFO:                pyod: 2.0.5
2025-08-15 18:06:35,187:INFO:            imblearn: 0.12.4
2025-08-15 18:06:35,187:INFO:   category_encoders: 2.6.4
2025-08-15 18:06:35,188:INFO:            lightgbm: 4.6.0
2025-08-15 18:06:35,188:INFO:               numba: 0.60.0
2025-08-15 18:06:35,188:INFO:            requests: 2.32.4
2025-08-15 18:06:35,188:INFO:          matplotlib: 3.7.5
2025-08-15 18:06:35,188:INFO:          scikitplot: 0.3.7
2025-08-15 18:06:35,188:INFO:         yellowbrick: 1.5
2025-08-15 18:06:35,188:INFO:              plotly: 5.24.1
2025-08-15 18:06:35,188:INFO:    plotly-resampler: Not installed
2025-08-15 18:06:35,188:INFO:             kaleido: 1.0.0
2025-08-15 18:06:35,188:INFO:           schemdraw: 0.15
2025-08-15 18:06:35,188:INFO:         statsmodels: 0.14.5
2025-08-15 18:06:35,188:INFO:              sktime: 0.26.0
2025-08-15 18:06:35,188:INFO:               tbats: 1.1.3
2025-08-15 18:06:35,189:INFO:            pmdarima: 2.0.4
2025-08-15 18:06:35,189:INFO:              psutil: 7.0.0
2025-08-15 18:06:35,189:INFO:          markupsafe: 3.0.2
2025-08-15 18:06:35,189:INFO:             pickle5: Not installed
2025-08-15 18:06:35,189:INFO:         cloudpickle: 3.1.1
2025-08-15 18:06:35,189:INFO:         deprecation: 2.1.0
2025-08-15 18:06:35,189:INFO:              xxhash: 3.5.0
2025-08-15 18:06:35,189:INFO:           wurlitzer: Not installed
2025-08-15 18:06:35,189:INFO:PyCaret optional dependencies:
2025-08-15 18:06:50,052:INFO:                shap: 0.44.1
2025-08-15 18:06:50,052:INFO:           interpret: 0.7.1
2025-08-15 18:06:50,052:INFO:                umap: 0.5.7
2025-08-15 18:06:50,052:INFO:     ydata_profiling: 4.16.1
2025-08-15 18:06:50,052:INFO:  explainerdashboard: 0.5.1
2025-08-15 18:06:50,052:INFO:             autoviz: Not installed
2025-08-15 18:06:50,052:INFO:           fairlearn: 0.7.0
2025-08-15 18:06:50,052:INFO:          deepchecks: Not installed
2025-08-15 18:06:50,052:INFO:             xgboost: Not installed
2025-08-15 18:06:50,052:INFO:            catboost: Not installed
2025-08-15 18:06:50,052:INFO:              kmodes: Not installed
2025-08-15 18:06:50,053:INFO:             mlxtend: Not installed
2025-08-15 18:06:50,053:INFO:       statsforecast: Not installed
2025-08-15 18:06:50,053:INFO:        tune_sklearn: Not installed
2025-08-15 18:06:50,053:INFO:                 ray: Not installed
2025-08-15 18:06:50,053:INFO:            hyperopt: Not installed
2025-08-15 18:06:50,053:INFO:              optuna: Not installed
2025-08-15 18:06:50,053:INFO:               skopt: Not installed
2025-08-15 18:06:50,053:INFO:              mlflow: Not installed
2025-08-15 18:06:50,053:INFO:              gradio: Not installed
2025-08-15 18:06:50,053:INFO:             fastapi: 0.116.1
2025-08-15 18:06:50,053:INFO:             uvicorn: 0.35.0
2025-08-15 18:06:50,053:INFO:              m2cgen: Not installed
2025-08-15 18:06:50,053:INFO:           evidently: Not installed
2025-08-15 18:06:50,053:INFO:               fugue: Not installed
2025-08-15 18:06:50,053:INFO:           streamlit: Not installed
2025-08-15 18:06:50,053:INFO:             prophet: Not installed
2025-08-15 18:06:50,054:INFO:None
2025-08-15 18:06:50,054:INFO:Set up data.
2025-08-15 18:06:50,366:INFO:Set up folding strategy.
2025-08-15 18:06:50,367:INFO:Set up train/test split.
2025-08-15 18:06:50,687:INFO:Set up index.
2025-08-15 18:06:50,687:INFO:Assigning column types.
2025-08-15 18:06:50,746:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-15 18:06:50,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-15 18:06:50,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:06:51,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,367:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-15 18:06:51,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:06:51,427:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,427:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,428:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-15 18:06:51,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:06:51,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,683:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:06:51,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,743:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-15 18:06:51,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:51,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:52,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:52,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:06:52,117:INFO:Preparing preprocessing pipeline...
2025-08-15 18:06:52,188:INFO:Set up label encoding.
2025-08-15 18:06:52,188:INFO:Set up simple imputation.
2025-08-15 18:06:52,188:INFO:Set up text embedding.
2025-08-15 18:06:52,188:INFO:Set up imbalanced handling.
2025-08-15 18:06:58,401:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pipeline.py:256: UserWarning: Persisting input arguments took 0.82s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.

2025-08-15 18:07:00,500:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pipeline.py:278: UserWarning: Persisting input arguments took 0.97s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.

2025-08-15 18:07:00,526:INFO:Finished creating preprocessing pipeline.
2025-08-15 18:07:00,542:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-08-15 18:07:00,542:INFO:Creating final display dataframe.
2025-08-15 18:07:19,003:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pipeline.py:111: UserWarning: Persisting input arguments took 1.51s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.

2025-08-15 18:07:47,062:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pipeline.py:111: UserWarning: Persisting input arguments took 1.12s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.

2025-08-15 18:09:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:09:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:09:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:09:03,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:09:10,594:INFO:PyCaret ClassificationExperiment
2025-08-15 18:09:10,594:INFO:Logging name: clf-default-name
2025-08-15 18:09:10,595:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-15 18:09:10,595:INFO:version 3.3.2
2025-08-15 18:09:10,595:INFO:Initializing setup()
2025-08-15 18:09:10,595:INFO:self.USI: 4ad1
2025-08-15 18:09:10,595:INFO:self._variable_keys: {'y_train', 'target_param', 'memory', 'pipeline', '_available_plots', 'fold_groups_param', 'html_param', 'y_test', 'X', 'exp_id', 'data', 'logging_param', 'gpu_n_jobs_param', 'fix_imbalance', 'is_multiclass', 'fold_generator', 'USI', 'X_train', 'fold_shuffle_param', 'gpu_param', 'X_test', 'exp_name_log', 'idx', 'n_jobs_param', 'seed', 'log_plots_param', 'y', '_ml_usecase'}
2025-08-15 18:09:10,595:INFO:Checking environment
2025-08-15 18:09:10,595:INFO:python_version: 3.9.23
2025-08-15 18:09:10,595:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-15 18:09:10,595:INFO:machine: AMD64
2025-08-15 18:09:10,617:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-15 18:09:10,620:INFO:Memory: svmem(total=8458973184, available=2151608320, percent=74.6, used=6307364864, free=2151608320)
2025-08-15 18:09:10,620:INFO:Physical Core: 2
2025-08-15 18:09:10,620:INFO:Logical Core: 4
2025-08-15 18:09:10,620:INFO:Checking libraries
2025-08-15 18:09:10,620:INFO:System:
2025-08-15 18:09:10,620:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-15 18:09:10,620:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-15 18:09:10,620:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-15 18:09:10,620:INFO:PyCaret required dependencies:
2025-08-15 18:09:10,848:INFO:                 pip: 25.1
2025-08-15 18:09:10,848:INFO:          setuptools: 78.1.1
2025-08-15 18:09:10,848:INFO:             pycaret: 3.3.2
2025-08-15 18:09:10,848:INFO:             IPython: 8.18.1
2025-08-15 18:09:10,848:INFO:          ipywidgets: 8.1.7
2025-08-15 18:09:10,848:INFO:                tqdm: 4.67.1
2025-08-15 18:09:10,848:INFO:               numpy: 1.26.4
2025-08-15 18:09:10,849:INFO:              pandas: 2.1.4
2025-08-15 18:09:10,849:INFO:              jinja2: 3.1.6
2025-08-15 18:09:10,849:INFO:               scipy: 1.11.4
2025-08-15 18:09:10,849:INFO:              joblib: 1.5.1
2025-08-15 18:09:10,849:INFO:             sklearn: 1.4.2
2025-08-15 18:09:10,849:INFO:                pyod: 2.0.5
2025-08-15 18:09:10,849:INFO:            imblearn: 0.12.4
2025-08-15 18:09:10,849:INFO:   category_encoders: 2.6.4
2025-08-15 18:09:10,849:INFO:            lightgbm: 4.6.0
2025-08-15 18:09:10,849:INFO:               numba: 0.60.0
2025-08-15 18:09:10,849:INFO:            requests: 2.32.4
2025-08-15 18:09:10,849:INFO:          matplotlib: 3.7.5
2025-08-15 18:09:10,849:INFO:          scikitplot: 0.3.7
2025-08-15 18:09:10,849:INFO:         yellowbrick: 1.5
2025-08-15 18:09:10,849:INFO:              plotly: 5.24.1
2025-08-15 18:09:10,850:INFO:    plotly-resampler: Not installed
2025-08-15 18:09:10,850:INFO:             kaleido: 1.0.0
2025-08-15 18:09:10,850:INFO:           schemdraw: 0.15
2025-08-15 18:09:10,850:INFO:         statsmodels: 0.14.5
2025-08-15 18:09:10,850:INFO:              sktime: 0.26.0
2025-08-15 18:09:10,850:INFO:               tbats: 1.1.3
2025-08-15 18:09:10,850:INFO:            pmdarima: 2.0.4
2025-08-15 18:09:10,850:INFO:              psutil: 7.0.0
2025-08-15 18:09:10,850:INFO:          markupsafe: 3.0.2
2025-08-15 18:09:10,850:INFO:             pickle5: Not installed
2025-08-15 18:09:10,850:INFO:         cloudpickle: 3.1.1
2025-08-15 18:09:10,850:INFO:         deprecation: 2.1.0
2025-08-15 18:09:10,850:INFO:              xxhash: 3.5.0
2025-08-15 18:09:10,850:INFO:           wurlitzer: Not installed
2025-08-15 18:09:10,850:INFO:PyCaret optional dependencies:
2025-08-15 18:09:22,050:INFO:                shap: 0.44.1
2025-08-15 18:09:22,050:INFO:           interpret: 0.7.1
2025-08-15 18:09:22,050:INFO:                umap: 0.5.7
2025-08-15 18:09:22,050:INFO:     ydata_profiling: 4.16.1
2025-08-15 18:09:22,051:INFO:  explainerdashboard: 0.5.1
2025-08-15 18:09:22,051:INFO:             autoviz: Not installed
2025-08-15 18:09:22,051:INFO:           fairlearn: 0.7.0
2025-08-15 18:09:22,051:INFO:          deepchecks: Not installed
2025-08-15 18:09:22,051:INFO:             xgboost: Not installed
2025-08-15 18:09:22,051:INFO:            catboost: Not installed
2025-08-15 18:09:22,051:INFO:              kmodes: Not installed
2025-08-15 18:09:22,051:INFO:             mlxtend: Not installed
2025-08-15 18:09:22,051:INFO:       statsforecast: Not installed
2025-08-15 18:09:22,051:INFO:        tune_sklearn: Not installed
2025-08-15 18:09:22,051:INFO:                 ray: Not installed
2025-08-15 18:09:22,051:INFO:            hyperopt: Not installed
2025-08-15 18:09:22,051:INFO:              optuna: Not installed
2025-08-15 18:09:22,051:INFO:               skopt: Not installed
2025-08-15 18:09:22,051:INFO:              mlflow: Not installed
2025-08-15 18:09:22,052:INFO:              gradio: Not installed
2025-08-15 18:09:22,052:INFO:             fastapi: 0.116.1
2025-08-15 18:09:22,052:INFO:             uvicorn: 0.35.0
2025-08-15 18:09:22,052:INFO:              m2cgen: Not installed
2025-08-15 18:09:22,052:INFO:           evidently: Not installed
2025-08-15 18:09:22,052:INFO:               fugue: Not installed
2025-08-15 18:09:22,052:INFO:           streamlit: Not installed
2025-08-15 18:09:22,052:INFO:             prophet: Not installed
2025-08-15 18:09:22,052:INFO:None
2025-08-15 18:09:22,052:INFO:Set up data.
2025-08-15 18:09:22,117:INFO:Set up folding strategy.
2025-08-15 18:09:22,118:INFO:Set up train/test split.
2025-08-15 18:09:22,159:INFO:Set up index.
2025-08-15 18:09:22,160:INFO:Assigning column types.
2025-08-15 18:09:22,172:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-15 18:09:22,265:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-15 18:09:22,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:09:22,382:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:22,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:22,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-15 18:09:22,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:09:22,756:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:22,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:22,757:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-15 18:09:22,865:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:09:22,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:22,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,068:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:09:23,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,143:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-15 18:09:23,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:23,543:INFO:Preparing preprocessing pipeline...
2025-08-15 18:09:23,611:INFO:Set up label encoding.
2025-08-15 18:09:23,611:INFO:Set up simple imputation.
2025-08-15 18:09:23,611:INFO:Set up text embedding.
2025-08-15 18:09:23,611:INFO:Set up imbalanced handling.
2025-08-15 18:09:24,923:INFO:Finished creating preprocessing pipeline.
2025-08-15 18:09:24,961:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-08-15 18:09:24,962:INFO:Creating final display dataframe.
2025-08-15 18:09:34,466:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 3)
5           Transformed data shape              (7899, 7305)
6      Transformed train set shape              (6424, 7305)
7       Transformed test set shape              (1475, 7305)
8                 Numeric features                         1
9                    Text features                         1
10                      Preprocess                      True
11                 Imputation type                    simple
12              Numeric imputation                      mean
13          Categorical imputation                      mode
14  Text features embedding method                    tf-idf
15                   Fix imbalance                      True
16            Fix imbalance method                     SMOTE
17                  Fold Generator           StratifiedKFold
18                     Fold Number                         5
19                        CPU Jobs                        -1
20                         Use GPU                     False
21                  Log Experiment                     False
22                 Experiment Name          clf-default-name
23                             USI                      4ad1
2025-08-15 18:09:34,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:34,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:34,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:34,866:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:09:34,868:INFO:setup() successfully completed in 24.29s...............
2025-08-15 18:09:34,868:INFO:Initializing compare_models()
2025-08-15 18:09:34,868:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-15 18:09:34,868:INFO:Checking exceptions
2025-08-15 18:09:34,914:INFO:Preparing display monitor
2025-08-15 18:09:34,944:INFO:Initializing Logistic Regression
2025-08-15 18:09:34,945:INFO:Total runtime is 1.6661485036214194e-05 minutes
2025-08-15 18:09:34,945:INFO:SubProcess create_model() called ==================================
2025-08-15 18:09:34,946:INFO:Initializing create_model()
2025-08-15 18:09:34,946:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACC4A5100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:09:34,946:INFO:Checking exceptions
2025-08-15 18:09:34,946:INFO:Importing libraries
2025-08-15 18:09:34,946:INFO:Copying training dataset
2025-08-15 18:09:34,951:INFO:Defining folds
2025-08-15 18:09:34,952:INFO:Declaring metric variables
2025-08-15 18:09:34,952:INFO:Importing untrained model
2025-08-15 18:09:34,953:INFO:Logistic Regression Imported successfully
2025-08-15 18:09:34,954:INFO:Starting cross validation
2025-08-15 18:09:34,990:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:10:24,395:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:24,406:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:24,423:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:24,441:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:24,457:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:24,484:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:25,072:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:25,090:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:25,106:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:25,235:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:25,250:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:25,269:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:33,475:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:33,490:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:33,502:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:33,531:INFO:Calculating mean and std
2025-08-15 18:10:33,562:INFO:Creating metrics dataframe
2025-08-15 18:10:33,580:INFO:Uploading results into container
2025-08-15 18:10:33,581:INFO:Uploading model into container now
2025-08-15 18:10:33,581:INFO:_master_model_container: 1
2025-08-15 18:10:33,581:INFO:_display_container: 2
2025-08-15 18:10:33,582:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:10:33,582:INFO:create_model() successfully completed......................................
2025-08-15 18:10:33,724:INFO:SubProcess create_model() end ==================================
2025-08-15 18:10:33,724:INFO:Creating metrics dataframe
2025-08-15 18:10:33,772:INFO:Initializing SVM - Linear Kernel
2025-08-15 18:10:33,772:INFO:Total runtime is 0.9804697076479594 minutes
2025-08-15 18:10:33,773:INFO:SubProcess create_model() called ==================================
2025-08-15 18:10:33,773:INFO:Initializing create_model()
2025-08-15 18:10:33,773:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACC4A5100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:10:33,773:INFO:Checking exceptions
2025-08-15 18:10:33,773:INFO:Importing libraries
2025-08-15 18:10:33,773:INFO:Copying training dataset
2025-08-15 18:10:33,783:INFO:Defining folds
2025-08-15 18:10:33,784:INFO:Declaring metric variables
2025-08-15 18:10:33,784:INFO:Importing untrained model
2025-08-15 18:10:33,787:INFO:SVM - Linear Kernel Imported successfully
2025-08-15 18:10:33,787:INFO:Starting cross validation
2025-08-15 18:10:33,822:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:10:53,924:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:53,924:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:53,933:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:53,974:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:53,974:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:53,985:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:53,999:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:54,009:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:54,023:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:54,151:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:54,220:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:10:54,258:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:01,396:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:01,412:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:01,423:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:01,458:INFO:Calculating mean and std
2025-08-15 18:11:01,460:INFO:Creating metrics dataframe
2025-08-15 18:11:01,464:INFO:Uploading results into container
2025-08-15 18:11:01,465:INFO:Uploading model into container now
2025-08-15 18:11:01,466:INFO:_master_model_container: 2
2025-08-15 18:11:01,466:INFO:_display_container: 2
2025-08-15 18:11:01,468:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-15 18:11:01,468:INFO:create_model() successfully completed......................................
2025-08-15 18:11:01,608:INFO:SubProcess create_model() end ==================================
2025-08-15 18:11:01,608:INFO:Creating metrics dataframe
2025-08-15 18:11:01,619:INFO:Initializing Random Forest Classifier
2025-08-15 18:11:01,619:INFO:Total runtime is 1.4445838530858357 minutes
2025-08-15 18:11:01,619:INFO:SubProcess create_model() called ==================================
2025-08-15 18:11:01,619:INFO:Initializing create_model()
2025-08-15 18:11:01,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001DACC4A5100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:11:01,620:INFO:Checking exceptions
2025-08-15 18:11:01,620:INFO:Importing libraries
2025-08-15 18:11:01,620:INFO:Copying training dataset
2025-08-15 18:11:01,626:INFO:Defining folds
2025-08-15 18:11:01,626:INFO:Declaring metric variables
2025-08-15 18:11:01,626:INFO:Importing untrained model
2025-08-15 18:11:01,627:INFO:Random Forest Classifier Imported successfully
2025-08-15 18:11:01,627:INFO:Starting cross validation
2025-08-15 18:11:01,675:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:11:33,664:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,686:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,695:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,707:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,723:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,736:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,741:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,749:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,750:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,765:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,768:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:33,790:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:45,069:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:45,081:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:45,105:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:11:45,142:INFO:Calculating mean and std
2025-08-15 18:11:45,144:INFO:Creating metrics dataframe
2025-08-15 18:11:45,151:INFO:Uploading results into container
2025-08-15 18:11:45,154:INFO:Uploading model into container now
2025-08-15 18:11:45,158:INFO:_master_model_container: 3
2025-08-15 18:11:45,158:INFO:_display_container: 2
2025-08-15 18:11:45,161:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-15 18:11:45,161:INFO:create_model() successfully completed......................................
2025-08-15 18:11:45,315:INFO:SubProcess create_model() end ==================================
2025-08-15 18:11:45,315:INFO:Creating metrics dataframe
2025-08-15 18:11:45,322:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-15 18:11:45,324:INFO:Initializing create_model()
2025-08-15 18:11:45,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:11:45,325:INFO:Checking exceptions
2025-08-15 18:11:45,356:INFO:Importing libraries
2025-08-15 18:11:45,356:INFO:Copying training dataset
2025-08-15 18:11:45,361:INFO:Defining folds
2025-08-15 18:11:45,361:INFO:Declaring metric variables
2025-08-15 18:11:45,362:INFO:Importing untrained model
2025-08-15 18:11:45,362:INFO:Declaring custom model
2025-08-15 18:11:45,363:INFO:Logistic Regression Imported successfully
2025-08-15 18:11:45,396:INFO:Cross validation set to False
2025-08-15 18:11:45,396:INFO:Fitting Model
2025-08-15 18:11:54,739:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:11:54,739:INFO:create_model() successfully completed......................................
2025-08-15 18:11:54,910:INFO:_master_model_container: 3
2025-08-15 18:11:54,910:INFO:_display_container: 2
2025-08-15 18:11:54,911:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:11:54,911:INFO:compare_models() successfully completed......................................
2025-08-15 18:11:54,912:INFO:Initializing tune_model()
2025-08-15 18:11:54,912:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001DAADD6B790>)
2025-08-15 18:11:54,912:INFO:Checking exceptions
2025-08-15 18:11:54,917:INFO:Copying training dataset
2025-08-15 18:11:54,927:INFO:Checking base model
2025-08-15 18:11:54,928:INFO:Base model : Logistic Regression
2025-08-15 18:11:54,929:INFO:Declaring metric variables
2025-08-15 18:11:54,930:INFO:Defining Hyperparameters
2025-08-15 18:11:55,108:INFO:Tuning with n_jobs=-1
2025-08-15 18:11:55,108:INFO:Initializing RandomizedSearchCV
2025-08-15 18:12:16,987:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:17,459:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:17,536:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:17,545:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:41,081:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:41,082:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:41,100:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:12:41,379:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:19,554:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:19,562:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:19,565:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:19,706:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:55,700:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:55,708:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:55,713:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:13:55,716:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:14:19,004:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:14:19,009:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:14:19,010:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:14:19,022:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:14:44,191:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:14:44,191:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:11,318:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:11,318:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:11,496:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:11,621:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:48,835:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:49,129:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:49,855:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:15:50,287:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:17:58,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:17:58,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:17:58,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:17:58,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-15 18:18:10,522:INFO:PyCaret ClassificationExperiment
2025-08-15 18:18:10,522:INFO:Logging name: clf-default-name
2025-08-15 18:18:10,523:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-15 18:18:10,523:INFO:version 3.3.2
2025-08-15 18:18:10,523:INFO:Initializing setup()
2025-08-15 18:18:10,523:INFO:self.USI: f012
2025-08-15 18:18:10,523:INFO:self._variable_keys: {'idx', 'fix_imbalance', 'gpu_n_jobs_param', 'exp_name_log', '_available_plots', 'exp_id', 'log_plots_param', 'data', 'USI', 'html_param', '_ml_usecase', 'is_multiclass', 'fold_groups_param', 'X', 'y_train', 'y_test', 'pipeline', 'X_train', 'gpu_param', 'fold_shuffle_param', 'logging_param', 'seed', 'memory', 'X_test', 'y', 'fold_generator', 'n_jobs_param', 'target_param'}
2025-08-15 18:18:10,523:INFO:Checking environment
2025-08-15 18:18:10,523:INFO:python_version: 3.9.23
2025-08-15 18:18:10,524:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-15 18:18:10,524:INFO:machine: AMD64
2025-08-15 18:18:10,602:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-15 18:18:10,611:INFO:Memory: svmem(total=8458973184, available=3211436032, percent=62.0, used=5247537152, free=3211436032)
2025-08-15 18:18:10,612:INFO:Physical Core: 2
2025-08-15 18:18:10,612:INFO:Logical Core: 4
2025-08-15 18:18:10,612:INFO:Checking libraries
2025-08-15 18:18:10,612:INFO:System:
2025-08-15 18:18:10,612:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-15 18:18:10,613:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-15 18:18:10,613:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-15 18:18:10,613:INFO:PyCaret required dependencies:
2025-08-15 18:18:11,023:INFO:                 pip: 25.1
2025-08-15 18:18:11,023:INFO:          setuptools: 78.1.1
2025-08-15 18:18:11,023:INFO:             pycaret: 3.3.2
2025-08-15 18:18:11,024:INFO:             IPython: 8.18.1
2025-08-15 18:18:11,024:INFO:          ipywidgets: 8.1.7
2025-08-15 18:18:11,024:INFO:                tqdm: 4.67.1
2025-08-15 18:18:11,024:INFO:               numpy: 1.26.4
2025-08-15 18:18:11,024:INFO:              pandas: 2.1.4
2025-08-15 18:18:11,024:INFO:              jinja2: 3.1.6
2025-08-15 18:18:11,024:INFO:               scipy: 1.11.4
2025-08-15 18:18:11,024:INFO:              joblib: 1.5.1
2025-08-15 18:18:11,025:INFO:             sklearn: 1.4.2
2025-08-15 18:18:11,025:INFO:                pyod: 2.0.5
2025-08-15 18:18:11,025:INFO:            imblearn: 0.12.4
2025-08-15 18:18:11,025:INFO:   category_encoders: 2.6.4
2025-08-15 18:18:11,025:INFO:            lightgbm: 4.6.0
2025-08-15 18:18:11,025:INFO:               numba: 0.60.0
2025-08-15 18:18:11,026:INFO:            requests: 2.32.4
2025-08-15 18:18:11,026:INFO:          matplotlib: 3.7.5
2025-08-15 18:18:11,026:INFO:          scikitplot: 0.3.7
2025-08-15 18:18:11,026:INFO:         yellowbrick: 1.5
2025-08-15 18:18:11,026:INFO:              plotly: 5.24.1
2025-08-15 18:18:11,026:INFO:    plotly-resampler: Not installed
2025-08-15 18:18:11,026:INFO:             kaleido: 1.0.0
2025-08-15 18:18:11,026:INFO:           schemdraw: 0.15
2025-08-15 18:18:11,026:INFO:         statsmodels: 0.14.5
2025-08-15 18:18:11,027:INFO:              sktime: 0.26.0
2025-08-15 18:18:11,027:INFO:               tbats: 1.1.3
2025-08-15 18:18:11,027:INFO:            pmdarima: 2.0.4
2025-08-15 18:18:11,027:INFO:              psutil: 7.0.0
2025-08-15 18:18:11,027:INFO:          markupsafe: 3.0.2
2025-08-15 18:18:11,027:INFO:             pickle5: Not installed
2025-08-15 18:18:11,027:INFO:         cloudpickle: 3.1.1
2025-08-15 18:18:11,028:INFO:         deprecation: 2.1.0
2025-08-15 18:18:11,028:INFO:              xxhash: 3.5.0
2025-08-15 18:18:11,028:INFO:           wurlitzer: Not installed
2025-08-15 18:18:11,028:INFO:PyCaret optional dependencies:
2025-08-15 18:18:30,884:INFO:                shap: 0.44.1
2025-08-15 18:18:30,884:INFO:           interpret: 0.7.1
2025-08-15 18:18:30,884:INFO:                umap: 0.5.7
2025-08-15 18:18:30,884:INFO:     ydata_profiling: 4.16.1
2025-08-15 18:18:30,884:INFO:  explainerdashboard: 0.5.1
2025-08-15 18:18:30,885:INFO:             autoviz: Not installed
2025-08-15 18:18:30,885:INFO:           fairlearn: 0.7.0
2025-08-15 18:18:30,885:INFO:          deepchecks: Not installed
2025-08-15 18:18:30,885:INFO:             xgboost: Not installed
2025-08-15 18:18:30,885:INFO:            catboost: Not installed
2025-08-15 18:18:30,885:INFO:              kmodes: Not installed
2025-08-15 18:18:30,885:INFO:             mlxtend: Not installed
2025-08-15 18:18:30,885:INFO:       statsforecast: Not installed
2025-08-15 18:18:30,885:INFO:        tune_sklearn: Not installed
2025-08-15 18:18:30,885:INFO:                 ray: Not installed
2025-08-15 18:18:30,885:INFO:            hyperopt: Not installed
2025-08-15 18:18:30,885:INFO:              optuna: Not installed
2025-08-15 18:18:30,885:INFO:               skopt: Not installed
2025-08-15 18:18:30,886:INFO:              mlflow: Not installed
2025-08-15 18:18:30,886:INFO:              gradio: Not installed
2025-08-15 18:18:30,886:INFO:             fastapi: 0.116.1
2025-08-15 18:18:30,886:INFO:             uvicorn: 0.35.0
2025-08-15 18:18:30,886:INFO:              m2cgen: Not installed
2025-08-15 18:18:30,886:INFO:           evidently: Not installed
2025-08-15 18:18:30,886:INFO:               fugue: Not installed
2025-08-15 18:18:30,886:INFO:           streamlit: Not installed
2025-08-15 18:18:30,886:INFO:             prophet: Not installed
2025-08-15 18:18:30,886:INFO:None
2025-08-15 18:18:30,886:INFO:Set up data.
2025-08-15 18:18:31,023:INFO:Set up folding strategy.
2025-08-15 18:18:31,023:INFO:Set up train/test split.
2025-08-15 18:18:31,088:INFO:Set up index.
2025-08-15 18:18:31,089:INFO:Assigning column types.
2025-08-15 18:18:31,123:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-15 18:18:31,220:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-15 18:18:31,236:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:18:31,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:31,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:31,535:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-15 18:18:31,537:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:18:31,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:31,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:31,589:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-15 18:18:31,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:18:31,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:31,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:31,995:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-15 18:18:32,092:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:32,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:32,093:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-15 18:18:32,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:32,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:32,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:32,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:32,561:INFO:Preparing preprocessing pipeline...
2025-08-15 18:18:32,601:INFO:Set up label encoding.
2025-08-15 18:18:32,602:INFO:Set up simple imputation.
2025-08-15 18:18:32,602:INFO:Set up text embedding.
2025-08-15 18:18:32,602:INFO:Set up imbalanced handling.
2025-08-15 18:18:33,658:INFO:Finished creating preprocessing pipeline.
2025-08-15 18:18:33,710:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-08-15 18:18:33,710:INFO:Creating final display dataframe.
2025-08-15 18:18:42,030:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 3)
5           Transformed data shape              (7899, 7305)
6      Transformed train set shape              (6424, 7305)
7       Transformed test set shape              (1475, 7305)
8                 Numeric features                         1
9                    Text features                         1
10                      Preprocess                      True
11                 Imputation type                    simple
12              Numeric imputation                      mean
13          Categorical imputation                      mode
14  Text features embedding method                    tf-idf
15                   Fix imbalance                      True
16            Fix imbalance method                     SMOTE
17                  Fold Generator           StratifiedKFold
18                     Fold Number                         5
19                        CPU Jobs                        -1
20                         Use GPU                     False
21                  Log Experiment                     False
22                 Experiment Name          clf-default-name
23                             USI                      f012
2025-08-15 18:18:42,181:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:42,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:42,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:42,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-15 18:18:42,312:INFO:setup() successfully completed in 31.82s...............
2025-08-15 18:18:42,312:INFO:Initializing compare_models()
2025-08-15 18:18:42,312:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-15 18:18:42,312:INFO:Checking exceptions
2025-08-15 18:18:42,343:INFO:Preparing display monitor
2025-08-15 18:18:42,383:INFO:Initializing Logistic Regression
2025-08-15 18:18:42,383:INFO:Total runtime is 0.0 minutes
2025-08-15 18:18:42,383:INFO:SubProcess create_model() called ==================================
2025-08-15 18:18:42,384:INFO:Initializing create_model()
2025-08-15 18:18:42,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025D52E251C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:18:42,384:INFO:Checking exceptions
2025-08-15 18:18:42,384:INFO:Importing libraries
2025-08-15 18:18:42,384:INFO:Copying training dataset
2025-08-15 18:18:42,391:INFO:Defining folds
2025-08-15 18:18:42,391:INFO:Declaring metric variables
2025-08-15 18:18:42,391:INFO:Importing untrained model
2025-08-15 18:18:42,392:INFO:Logistic Regression Imported successfully
2025-08-15 18:18:42,392:INFO:Starting cross validation
2025-08-15 18:18:42,430:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:19:27,131:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,132:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,135:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,135:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,153:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,153:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,154:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,161:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,174:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,214:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,250:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:27,265:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:36,414:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:36,424:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:36,434:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:19:36,457:INFO:Calculating mean and std
2025-08-15 18:19:36,491:INFO:Creating metrics dataframe
2025-08-15 18:19:36,509:INFO:Uploading results into container
2025-08-15 18:19:36,510:INFO:Uploading model into container now
2025-08-15 18:19:36,511:INFO:_master_model_container: 1
2025-08-15 18:19:36,511:INFO:_display_container: 2
2025-08-15 18:19:36,512:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:19:36,512:INFO:create_model() successfully completed......................................
2025-08-15 18:19:36,676:INFO:SubProcess create_model() end ==================================
2025-08-15 18:19:36,676:INFO:Creating metrics dataframe
2025-08-15 18:19:36,700:INFO:Initializing SVM - Linear Kernel
2025-08-15 18:19:36,701:INFO:Total runtime is 0.905295999844869 minutes
2025-08-15 18:19:36,701:INFO:SubProcess create_model() called ==================================
2025-08-15 18:19:36,701:INFO:Initializing create_model()
2025-08-15 18:19:36,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025D52E251C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:19:36,702:INFO:Checking exceptions
2025-08-15 18:19:36,702:INFO:Importing libraries
2025-08-15 18:19:36,702:INFO:Copying training dataset
2025-08-15 18:19:36,708:INFO:Defining folds
2025-08-15 18:19:36,708:INFO:Declaring metric variables
2025-08-15 18:19:36,709:INFO:Importing untrained model
2025-08-15 18:19:36,710:INFO:SVM - Linear Kernel Imported successfully
2025-08-15 18:19:36,711:INFO:Starting cross validation
2025-08-15 18:19:36,744:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:20:00,664:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,664:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,664:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,683:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,687:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,689:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,701:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,707:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,707:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,776:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,786:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:00,795:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:06,662:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:06,671:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:06,680:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:06,711:INFO:Calculating mean and std
2025-08-15 18:20:06,713:INFO:Creating metrics dataframe
2025-08-15 18:20:06,718:INFO:Uploading results into container
2025-08-15 18:20:06,719:INFO:Uploading model into container now
2025-08-15 18:20:06,720:INFO:_master_model_container: 2
2025-08-15 18:20:06,720:INFO:_display_container: 2
2025-08-15 18:20:06,721:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-15 18:20:06,721:INFO:create_model() successfully completed......................................
2025-08-15 18:20:06,845:INFO:SubProcess create_model() end ==================================
2025-08-15 18:20:06,846:INFO:Creating metrics dataframe
2025-08-15 18:20:06,905:INFO:Initializing Random Forest Classifier
2025-08-15 18:20:06,905:INFO:Total runtime is 1.4086896379788718 minutes
2025-08-15 18:20:06,906:INFO:SubProcess create_model() called ==================================
2025-08-15 18:20:06,906:INFO:Initializing create_model()
2025-08-15 18:20:06,906:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025D52E251C0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:20:06,906:INFO:Checking exceptions
2025-08-15 18:20:06,906:INFO:Importing libraries
2025-08-15 18:20:06,906:INFO:Copying training dataset
2025-08-15 18:20:06,912:INFO:Defining folds
2025-08-15 18:20:06,912:INFO:Declaring metric variables
2025-08-15 18:20:06,912:INFO:Importing untrained model
2025-08-15 18:20:06,913:INFO:Random Forest Classifier Imported successfully
2025-08-15 18:20:06,913:INFO:Starting cross validation
2025-08-15 18:20:06,944:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:20:31,795:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:31,856:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:31,916:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,144:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,212:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,255:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,281:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,315:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,343:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,571:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,597:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:32,619:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:41,216:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:41,225:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:41,234:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:20:41,253:INFO:Calculating mean and std
2025-08-15 18:20:41,255:INFO:Creating metrics dataframe
2025-08-15 18:20:41,259:INFO:Uploading results into container
2025-08-15 18:20:41,260:INFO:Uploading model into container now
2025-08-15 18:20:41,261:INFO:_master_model_container: 3
2025-08-15 18:20:41,261:INFO:_display_container: 2
2025-08-15 18:20:41,261:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-15 18:20:41,262:INFO:create_model() successfully completed......................................
2025-08-15 18:20:41,370:INFO:SubProcess create_model() end ==================================
2025-08-15 18:20:41,371:INFO:Creating metrics dataframe
2025-08-15 18:20:41,376:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-15 18:20:41,379:INFO:Initializing create_model()
2025-08-15 18:20:41,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:20:41,379:INFO:Checking exceptions
2025-08-15 18:20:41,406:INFO:Importing libraries
2025-08-15 18:20:41,406:INFO:Copying training dataset
2025-08-15 18:20:41,411:INFO:Defining folds
2025-08-15 18:20:41,411:INFO:Declaring metric variables
2025-08-15 18:20:41,411:INFO:Importing untrained model
2025-08-15 18:20:41,411:INFO:Declaring custom model
2025-08-15 18:20:41,412:INFO:Logistic Regression Imported successfully
2025-08-15 18:20:41,446:INFO:Cross validation set to False
2025-08-15 18:20:41,446:INFO:Fitting Model
2025-08-15 18:20:50,755:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:20:50,755:INFO:create_model() successfully completed......................................
2025-08-15 18:20:50,949:INFO:_master_model_container: 3
2025-08-15 18:20:50,949:INFO:_display_container: 2
2025-08-15 18:20:50,950:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:20:50,951:INFO:compare_models() successfully completed......................................
2025-08-15 18:20:50,952:INFO:Initializing tune_model()
2025-08-15 18:20:50,952:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>)
2025-08-15 18:20:50,952:INFO:Checking exceptions
2025-08-15 18:20:50,958:INFO:Copying training dataset
2025-08-15 18:20:50,965:INFO:Checking base model
2025-08-15 18:20:50,966:INFO:Base model : Logistic Regression
2025-08-15 18:20:50,966:INFO:Declaring metric variables
2025-08-15 18:20:50,966:INFO:Defining Hyperparameters
2025-08-15 18:20:51,132:INFO:Tuning with n_jobs=-1
2025-08-15 18:20:51,132:INFO:Initializing RandomizedSearchCV
2025-08-15 18:21:13,680:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:14,005:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:14,237:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:14,299:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:32,819:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:33,401:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:33,736:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:34,471:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:53,122:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:54,950:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:55,474:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:21:55,786:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:22:18,255:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:22:22,130:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:22:22,712:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:22:22,959:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:22:58,570:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:06,524:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:07,007:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:07,405:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:33,341:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:38,609:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:40,654:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:23:41,062:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:00,525:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:05,273:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:07,335:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:08,458:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:24,359:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:27,476:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:30,047:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:32,300:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:50,196:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:50,894:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:53,417:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:24:56,541:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:11,410:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:11,716:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:13,591:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:18,448:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:29,602:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:29,892:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:32,101:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:38,782:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:50,120:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:50,506:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:25:54,592:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:01,060:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:12,509:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:12,583:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:12,855:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2025-08-15 18:26:12,929:INFO:Hyperparameter search completed
2025-08-15 18:26:12,929:INFO:SubProcess create_model() called ==================================
2025-08-15 18:26:12,960:INFO:Initializing create_model()
2025-08-15 18:26:12,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000025D52E1A700>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.049})
2025-08-15 18:26:12,962:INFO:Checking exceptions
2025-08-15 18:26:12,964:INFO:Importing libraries
2025-08-15 18:26:12,975:INFO:Copying training dataset
2025-08-15 18:26:13,091:INFO:Defining folds
2025-08-15 18:26:13,093:INFO:Declaring metric variables
2025-08-15 18:26:13,098:INFO:Importing untrained model
2025-08-15 18:26:13,098:INFO:Declaring custom model
2025-08-15 18:26:13,106:INFO:Logistic Regression Imported successfully
2025-08-15 18:26:13,108:INFO:Starting cross validation
2025-08-15 18:26:13,205:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:26:40,371:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,371:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,371:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,372:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,405:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,408:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,424:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,428:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,430:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,434:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,440:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:40,445:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:47,862:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:47,873:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:47,884:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:26:47,914:INFO:Calculating mean and std
2025-08-15 18:26:47,918:INFO:Creating metrics dataframe
2025-08-15 18:26:47,996:INFO:Finalizing model
2025-08-15 18:26:58,243:INFO:Uploading results into container
2025-08-15 18:26:58,244:INFO:Uploading model into container now
2025-08-15 18:26:58,245:INFO:_master_model_container: 4
2025-08-15 18:26:58,245:INFO:_display_container: 3
2025-08-15 18:26:58,246:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:26:58,246:INFO:create_model() successfully completed......................................
2025-08-15 18:26:58,432:INFO:SubProcess create_model() end ==================================
2025-08-15 18:26:58,433:INFO:choose_better activated
2025-08-15 18:26:58,433:INFO:SubProcess create_model() called ==================================
2025-08-15 18:26:58,434:INFO:Initializing create_model()
2025-08-15 18:26:58,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:26:58,434:INFO:Checking exceptions
2025-08-15 18:26:58,435:INFO:Importing libraries
2025-08-15 18:26:58,435:INFO:Copying training dataset
2025-08-15 18:26:58,442:INFO:Defining folds
2025-08-15 18:26:58,442:INFO:Declaring metric variables
2025-08-15 18:26:58,442:INFO:Importing untrained model
2025-08-15 18:26:58,442:INFO:Declaring custom model
2025-08-15 18:26:58,443:INFO:Logistic Regression Imported successfully
2025-08-15 18:26:58,444:INFO:Starting cross validation
2025-08-15 18:26:58,489:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-15 18:27:19,388:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:19,415:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:19,436:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:19,603:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:19,627:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:19,646:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:20,143:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:20,161:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:20,178:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:20,411:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:20,430:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:20,447:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:27,626:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:27,635:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:27,643:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-15 18:27:27,669:INFO:Calculating mean and std
2025-08-15 18:27:27,670:INFO:Creating metrics dataframe
2025-08-15 18:27:27,673:INFO:Finalizing model
2025-08-15 18:27:35,560:INFO:Uploading results into container
2025-08-15 18:27:35,561:INFO:Uploading model into container now
2025-08-15 18:27:35,561:INFO:_master_model_container: 5
2025-08-15 18:27:35,562:INFO:_display_container: 4
2025-08-15 18:27:35,562:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:27:35,562:INFO:create_model() successfully completed......................................
2025-08-15 18:27:35,700:INFO:SubProcess create_model() end ==================================
2025-08-15 18:27:35,701:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-15 18:27:35,702:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-15 18:27:35,702:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-08-15 18:27:35,702:INFO:choose_better completed
2025-08-15 18:27:35,705:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-08-15 18:27:35,782:INFO:_master_model_container: 5
2025-08-15 18:27:35,782:INFO:_display_container: 3
2025-08-15 18:27:35,783:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:27:35,783:INFO:tune_model() successfully completed......................................
2025-08-15 18:27:35,906:INFO:Initializing finalize_model()
2025-08-15 18:27:35,906:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-15 18:27:35,907:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-15 18:27:35,911:INFO:Initializing create_model()
2025-08-15 18:27:35,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000025D348CB790>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-15 18:27:35,912:INFO:Checking exceptions
2025-08-15 18:27:35,913:INFO:Importing libraries
2025-08-15 18:27:35,913:INFO:Copying training dataset
2025-08-15 18:27:35,913:INFO:Defining folds
2025-08-15 18:27:35,914:INFO:Declaring metric variables
2025-08-15 18:27:35,914:INFO:Importing untrained model
2025-08-15 18:27:35,914:INFO:Declaring custom model
2025-08-15 18:27:35,915:INFO:Logistic Regression Imported successfully
2025-08-15 18:27:35,944:INFO:Cross validation set to False
2025-08-15 18:27:35,944:INFO:Fitting Model
2025-08-18 11:46:37,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 11:46:37,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 11:46:37,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 11:46:37,628:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 11:46:39,904:INFO:PyCaret ClassificationExperiment
2025-08-18 11:46:39,904:INFO:Logging name: clf-default-name
2025-08-18 11:46:39,904:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 11:46:39,904:INFO:version 3.3.2
2025-08-18 11:46:39,904:INFO:Initializing setup()
2025-08-18 11:46:39,904:INFO:self.USI: 3393
2025-08-18 11:46:39,904:INFO:self._variable_keys: {'_ml_usecase', 'USI', 'gpu_param', 'exp_id', 'gpu_n_jobs_param', 'X_test', 'y_test', 'y_train', 'log_plots_param', 'data', 'fold_shuffle_param', 'logging_param', 'target_param', 'pipeline', 'X', 'html_param', 'seed', 'y', 'n_jobs_param', 'memory', 'X_train', 'fold_generator', 'is_multiclass', 'fix_imbalance', 'exp_name_log', 'idx', 'fold_groups_param', '_available_plots'}
2025-08-18 11:46:39,904:INFO:Checking environment
2025-08-18 11:46:39,904:INFO:python_version: 3.9.23
2025-08-18 11:46:39,904:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-18 11:46:39,904:INFO:machine: AMD64
2025-08-18 11:46:39,932:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-18 11:46:39,942:INFO:Memory: svmem(total=8458973184, available=2386984960, percent=71.8, used=6071988224, free=2386984960)
2025-08-18 11:46:39,942:INFO:Physical Core: 2
2025-08-18 11:46:39,942:INFO:Logical Core: 4
2025-08-18 11:46:39,942:INFO:Checking libraries
2025-08-18 11:46:39,942:INFO:System:
2025-08-18 11:46:39,943:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-18 11:46:39,943:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-18 11:46:39,943:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-18 11:46:39,943:INFO:PyCaret required dependencies:
2025-08-18 11:46:40,247:INFO:                 pip: 25.1
2025-08-18 11:46:40,247:INFO:          setuptools: 78.1.1
2025-08-18 11:46:40,247:INFO:             pycaret: 3.3.2
2025-08-18 11:46:40,247:INFO:             IPython: 8.18.1
2025-08-18 11:46:40,247:INFO:          ipywidgets: 8.1.7
2025-08-18 11:46:40,248:INFO:                tqdm: 4.67.1
2025-08-18 11:46:40,248:INFO:               numpy: 1.26.4
2025-08-18 11:46:40,248:INFO:              pandas: 2.1.4
2025-08-18 11:46:40,248:INFO:              jinja2: 3.1.6
2025-08-18 11:46:40,248:INFO:               scipy: 1.11.4
2025-08-18 11:46:40,248:INFO:              joblib: 1.5.1
2025-08-18 11:46:40,248:INFO:             sklearn: 1.4.2
2025-08-18 11:46:40,248:INFO:                pyod: 2.0.5
2025-08-18 11:46:40,248:INFO:            imblearn: 0.12.4
2025-08-18 11:46:40,248:INFO:   category_encoders: 2.6.4
2025-08-18 11:46:40,248:INFO:            lightgbm: 4.6.0
2025-08-18 11:46:40,248:INFO:               numba: 0.60.0
2025-08-18 11:46:40,248:INFO:            requests: 2.32.4
2025-08-18 11:46:40,248:INFO:          matplotlib: 3.7.5
2025-08-18 11:46:40,248:INFO:          scikitplot: 0.3.7
2025-08-18 11:46:40,248:INFO:         yellowbrick: 1.5
2025-08-18 11:46:40,248:INFO:              plotly: 5.24.1
2025-08-18 11:46:40,248:INFO:    plotly-resampler: Not installed
2025-08-18 11:46:40,248:INFO:             kaleido: 1.0.0
2025-08-18 11:46:40,248:INFO:           schemdraw: 0.15
2025-08-18 11:46:40,249:INFO:         statsmodels: 0.14.5
2025-08-18 11:46:40,249:INFO:              sktime: 0.26.0
2025-08-18 11:46:40,249:INFO:               tbats: 1.1.3
2025-08-18 11:46:40,249:INFO:            pmdarima: 2.0.4
2025-08-18 11:46:40,249:INFO:              psutil: 7.0.0
2025-08-18 11:46:40,249:INFO:          markupsafe: 3.0.2
2025-08-18 11:46:40,249:INFO:             pickle5: Not installed
2025-08-18 11:46:40,249:INFO:         cloudpickle: 3.1.1
2025-08-18 11:46:40,249:INFO:         deprecation: 2.1.0
2025-08-18 11:46:40,249:INFO:              xxhash: 3.5.0
2025-08-18 11:46:40,249:INFO:           wurlitzer: Not installed
2025-08-18 11:46:40,249:INFO:PyCaret optional dependencies:
2025-08-18 11:46:55,068:INFO:                shap: 0.44.1
2025-08-18 11:46:55,068:INFO:           interpret: 0.7.1
2025-08-18 11:46:55,068:INFO:                umap: 0.5.7
2025-08-18 11:46:55,068:INFO:     ydata_profiling: 4.16.1
2025-08-18 11:46:55,068:INFO:  explainerdashboard: 0.5.1
2025-08-18 11:46:55,068:INFO:             autoviz: Not installed
2025-08-18 11:46:55,068:INFO:           fairlearn: 0.7.0
2025-08-18 11:46:55,068:INFO:          deepchecks: Not installed
2025-08-18 11:46:55,068:INFO:             xgboost: Not installed
2025-08-18 11:46:55,068:INFO:            catboost: Not installed
2025-08-18 11:46:55,068:INFO:              kmodes: Not installed
2025-08-18 11:46:55,069:INFO:             mlxtend: Not installed
2025-08-18 11:46:55,069:INFO:       statsforecast: Not installed
2025-08-18 11:46:55,069:INFO:        tune_sklearn: Not installed
2025-08-18 11:46:55,069:INFO:                 ray: Not installed
2025-08-18 11:46:55,069:INFO:            hyperopt: Not installed
2025-08-18 11:46:55,069:INFO:              optuna: Not installed
2025-08-18 11:46:55,069:INFO:               skopt: Not installed
2025-08-18 11:46:55,069:INFO:              mlflow: Not installed
2025-08-18 11:46:55,069:INFO:              gradio: Not installed
2025-08-18 11:46:55,069:INFO:             fastapi: 0.116.1
2025-08-18 11:46:55,069:INFO:             uvicorn: 0.35.0
2025-08-18 11:46:55,069:INFO:              m2cgen: Not installed
2025-08-18 11:46:55,069:INFO:           evidently: Not installed
2025-08-18 11:46:55,069:INFO:               fugue: Not installed
2025-08-18 11:46:55,069:INFO:           streamlit: Not installed
2025-08-18 11:46:55,069:INFO:             prophet: Not installed
2025-08-18 11:46:55,070:INFO:None
2025-08-18 11:46:55,070:INFO:Set up data.
2025-08-18 11:46:55,201:INFO:Set up folding strategy.
2025-08-18 11:46:55,201:INFO:Set up train/test split.
2025-08-18 11:46:55,328:INFO:Set up index.
2025-08-18 11:46:55,329:INFO:Assigning column types.
2025-08-18 11:46:55,334:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 11:46:55,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 11:46:55,409:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 11:46:55,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,558:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 11:46:55,559:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 11:46:55,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,599:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 11:46:55,660:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 11:46:55,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,804:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 11:46:55,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,856:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 11:46:55,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:55,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:56,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:56,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:46:56,055:INFO:Preparing preprocessing pipeline...
2025-08-18 11:46:56,116:INFO:Set up label encoding.
2025-08-18 11:46:56,116:INFO:Set up simple imputation.
2025-08-18 11:46:56,116:INFO:Set up text embedding.
2025-08-18 11:46:56,116:INFO:Set up imbalanced handling.
2025-08-18 11:46:57,085:INFO:Finished creating preprocessing pipeline.
2025-08-18 11:46:57,125:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-08-18 11:46:57,125:INFO:Creating final display dataframe.
2025-08-18 11:47:04,170:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 3)
5           Transformed data shape              (7899, 7305)
6      Transformed train set shape              (6424, 7305)
7       Transformed test set shape              (1475, 7305)
8                 Numeric features                         1
9                    Text features                         1
10                      Preprocess                      True
11                 Imputation type                    simple
12              Numeric imputation                      mean
13          Categorical imputation                      mode
14  Text features embedding method                    tf-idf
15                   Fix imbalance                      True
16            Fix imbalance method                     SMOTE
17                  Fold Generator           StratifiedKFold
18                     Fold Number                         5
19                        CPU Jobs                        -1
20                         Use GPU                     False
21                  Log Experiment                     False
22                 Experiment Name          clf-default-name
23                             USI                      3393
2025-08-18 11:47:04,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:47:04,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:47:04,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:47:04,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 11:47:04,449:INFO:setup() successfully completed in 24.58s...............
2025-08-18 11:47:04,449:INFO:Initializing compare_models()
2025-08-18 11:47:04,449:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-18 11:47:04,449:INFO:Checking exceptions
2025-08-18 11:47:04,465:INFO:Preparing display monitor
2025-08-18 11:47:04,505:INFO:Initializing Logistic Regression
2025-08-18 11:47:04,505:INFO:Total runtime is 0.0 minutes
2025-08-18 11:47:04,505:INFO:SubProcess create_model() called ==================================
2025-08-18 11:47:04,506:INFO:Initializing create_model()
2025-08-18 11:47:04,506:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B578657F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 11:47:04,506:INFO:Checking exceptions
2025-08-18 11:47:04,506:INFO:Importing libraries
2025-08-18 11:47:04,506:INFO:Copying training dataset
2025-08-18 11:47:04,511:INFO:Defining folds
2025-08-18 11:47:04,511:INFO:Declaring metric variables
2025-08-18 11:47:04,511:INFO:Importing untrained model
2025-08-18 11:47:04,512:INFO:Logistic Regression Imported successfully
2025-08-18 11:47:04,512:INFO:Starting cross validation
2025-08-18 11:47:04,543:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 11:47:43,013:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:43,080:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:43,109:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:43,590:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:43,666:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:43,736:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:47,480:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:47,514:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:47,535:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:48,526:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:48,551:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:47:48,571:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:00,507:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:00,515:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:00,525:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:00,547:INFO:Calculating mean and std
2025-08-18 11:48:00,580:INFO:Creating metrics dataframe
2025-08-18 11:48:00,630:INFO:Uploading results into container
2025-08-18 11:48:00,631:INFO:Uploading model into container now
2025-08-18 11:48:00,631:INFO:_master_model_container: 1
2025-08-18 11:48:00,632:INFO:_display_container: 2
2025-08-18 11:48:00,633:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:48:00,633:INFO:create_model() successfully completed......................................
2025-08-18 11:48:00,741:INFO:SubProcess create_model() end ==================================
2025-08-18 11:48:00,741:INFO:Creating metrics dataframe
2025-08-18 11:48:00,767:INFO:Initializing SVM - Linear Kernel
2025-08-18 11:48:00,767:INFO:Total runtime is 0.9376921772956848 minutes
2025-08-18 11:48:00,768:INFO:SubProcess create_model() called ==================================
2025-08-18 11:48:00,768:INFO:Initializing create_model()
2025-08-18 11:48:00,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B578657F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 11:48:00,768:INFO:Checking exceptions
2025-08-18 11:48:00,768:INFO:Importing libraries
2025-08-18 11:48:00,768:INFO:Copying training dataset
2025-08-18 11:48:00,773:INFO:Defining folds
2025-08-18 11:48:00,773:INFO:Declaring metric variables
2025-08-18 11:48:00,773:INFO:Importing untrained model
2025-08-18 11:48:00,774:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 11:48:00,775:INFO:Starting cross validation
2025-08-18 11:48:00,799:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 11:48:26,775:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,776:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,794:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,795:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,810:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,818:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,819:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,831:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,840:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,849:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:26,864:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:37,205:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:37,228:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:37,262:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:48:37,326:INFO:Calculating mean and std
2025-08-18 11:48:37,356:INFO:Creating metrics dataframe
2025-08-18 11:48:37,364:INFO:Uploading results into container
2025-08-18 11:48:37,367:INFO:Uploading model into container now
2025-08-18 11:48:37,368:INFO:_master_model_container: 2
2025-08-18 11:48:37,369:INFO:_display_container: 2
2025-08-18 11:48:37,371:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 11:48:37,371:INFO:create_model() successfully completed......................................
2025-08-18 11:48:37,816:INFO:SubProcess create_model() end ==================================
2025-08-18 11:48:37,817:INFO:Creating metrics dataframe
2025-08-18 11:48:37,851:INFO:Initializing Random Forest Classifier
2025-08-18 11:48:37,851:INFO:Total runtime is 1.5557594140370687 minutes
2025-08-18 11:48:37,852:INFO:SubProcess create_model() called ==================================
2025-08-18 11:48:37,853:INFO:Initializing create_model()
2025-08-18 11:48:37,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B578657F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 11:48:37,853:INFO:Checking exceptions
2025-08-18 11:48:37,853:INFO:Importing libraries
2025-08-18 11:48:37,854:INFO:Copying training dataset
2025-08-18 11:48:37,875:INFO:Defining folds
2025-08-18 11:48:37,875:INFO:Declaring metric variables
2025-08-18 11:48:37,876:INFO:Importing untrained model
2025-08-18 11:48:37,877:INFO:Random Forest Classifier Imported successfully
2025-08-18 11:48:37,878:INFO:Starting cross validation
2025-08-18 11:48:38,021:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 11:49:18,384:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,384:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,385:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,414:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,417:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,421:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,428:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,434:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,446:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,453:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,460:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:18,476:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:26,147:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:26,155:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:26,162:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:26,185:INFO:Calculating mean and std
2025-08-18 11:49:26,187:INFO:Creating metrics dataframe
2025-08-18 11:49:26,191:INFO:Uploading results into container
2025-08-18 11:49:26,191:INFO:Uploading model into container now
2025-08-18 11:49:26,192:INFO:_master_model_container: 3
2025-08-18 11:49:26,192:INFO:_display_container: 2
2025-08-18 11:49:26,193:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-18 11:49:26,193:INFO:create_model() successfully completed......................................
2025-08-18 11:49:26,409:INFO:SubProcess create_model() end ==================================
2025-08-18 11:49:26,410:INFO:Creating metrics dataframe
2025-08-18 11:49:26,419:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-18 11:49:26,427:INFO:Initializing create_model()
2025-08-18 11:49:26,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 11:49:26,428:INFO:Checking exceptions
2025-08-18 11:49:26,464:INFO:Importing libraries
2025-08-18 11:49:26,464:INFO:Copying training dataset
2025-08-18 11:49:26,469:INFO:Defining folds
2025-08-18 11:49:26,469:INFO:Declaring metric variables
2025-08-18 11:49:26,469:INFO:Importing untrained model
2025-08-18 11:49:26,469:INFO:Declaring custom model
2025-08-18 11:49:26,470:INFO:Logistic Regression Imported successfully
2025-08-18 11:49:26,492:INFO:Cross validation set to False
2025-08-18 11:49:26,492:INFO:Fitting Model
2025-08-18 11:49:36,317:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:49:36,317:INFO:create_model() successfully completed......................................
2025-08-18 11:49:36,498:INFO:_master_model_container: 3
2025-08-18 11:49:36,499:INFO:_display_container: 2
2025-08-18 11:49:36,499:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:49:36,499:INFO:compare_models() successfully completed......................................
2025-08-18 11:49:36,500:INFO:Initializing tune_model()
2025-08-18 11:49:36,500:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>)
2025-08-18 11:49:36,500:INFO:Checking exceptions
2025-08-18 11:49:36,505:INFO:Copying training dataset
2025-08-18 11:49:36,515:INFO:Checking base model
2025-08-18 11:49:36,515:INFO:Base model : Logistic Regression
2025-08-18 11:49:36,516:INFO:Declaring metric variables
2025-08-18 11:49:36,517:INFO:Defining Hyperparameters
2025-08-18 11:49:36,669:INFO:Tuning with n_jobs=-1
2025-08-18 11:49:36,670:INFO:Initializing RandomizedSearchCV
2025-08-18 11:49:59,496:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:59,777:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:59,846:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:49:59,849:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:26,227:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:26,338:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:26,383:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:27,510:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:48,183:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:48,776:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:48,957:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:50:49,012:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:51:15,421:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:51:39,580:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:51:39,580:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:51:39,580:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:51:39,580:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:51:59,316:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:18,875:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:19,095:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:20,115:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:20,627:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:36,951:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:37,676:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:38,998:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:39,551:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:55,405:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:56,857:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:58,183:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:52:58,921:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:11,712:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:14,300:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:15,687:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:16,686:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:28,812:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:32,042:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:34,532:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:35,133:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:46,976:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:49,105:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:55,067:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:53:56,379:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:05,252:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:06,277:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:06,569:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2025-08-18 11:54:06,691:INFO:Hyperparameter search completed
2025-08-18 11:54:06,692:INFO:SubProcess create_model() called ==================================
2025-08-18 11:54:06,742:INFO:Initializing create_model()
2025-08-18 11:54:06,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023B5CE1A730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.049})
2025-08-18 11:54:06,743:INFO:Checking exceptions
2025-08-18 11:54:06,744:INFO:Importing libraries
2025-08-18 11:54:06,758:INFO:Copying training dataset
2025-08-18 11:54:06,899:INFO:Defining folds
2025-08-18 11:54:06,900:INFO:Declaring metric variables
2025-08-18 11:54:06,907:INFO:Importing untrained model
2025-08-18 11:54:06,908:INFO:Declaring custom model
2025-08-18 11:54:06,915:INFO:Logistic Regression Imported successfully
2025-08-18 11:54:06,919:INFO:Starting cross validation
2025-08-18 11:54:07,011:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 11:54:25,097:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,118:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,132:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,601:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,615:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,628:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,685:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,702:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,716:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,716:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,731:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:25,746:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:32,722:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:32,730:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:32,738:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:54:32,765:INFO:Calculating mean and std
2025-08-18 11:54:32,769:INFO:Creating metrics dataframe
2025-08-18 11:54:32,856:INFO:Finalizing model
2025-08-18 11:54:42,612:INFO:Uploading results into container
2025-08-18 11:54:42,613:INFO:Uploading model into container now
2025-08-18 11:54:42,615:INFO:_master_model_container: 4
2025-08-18 11:54:42,615:INFO:_display_container: 3
2025-08-18 11:54:42,616:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:54:42,616:INFO:create_model() successfully completed......................................
2025-08-18 11:54:42,792:INFO:SubProcess create_model() end ==================================
2025-08-18 11:54:42,792:INFO:choose_better activated
2025-08-18 11:54:42,792:INFO:SubProcess create_model() called ==================================
2025-08-18 11:54:42,793:INFO:Initializing create_model()
2025-08-18 11:54:42,793:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 11:54:42,793:INFO:Checking exceptions
2025-08-18 11:54:42,823:INFO:Importing libraries
2025-08-18 11:54:42,824:INFO:Copying training dataset
2025-08-18 11:54:42,828:INFO:Defining folds
2025-08-18 11:54:42,828:INFO:Declaring metric variables
2025-08-18 11:54:42,828:INFO:Importing untrained model
2025-08-18 11:54:42,828:INFO:Declaring custom model
2025-08-18 11:54:42,829:INFO:Logistic Regression Imported successfully
2025-08-18 11:54:42,829:INFO:Starting cross validation
2025-08-18 11:54:42,846:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 11:55:01,891:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:01,892:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:01,907:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:01,908:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:01,922:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:01,930:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:02,010:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:02,025:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:02,043:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:02,077:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:02,095:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:02,112:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:10,368:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:10,390:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:10,416:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 11:55:10,464:INFO:Calculating mean and std
2025-08-18 11:55:10,465:INFO:Creating metrics dataframe
2025-08-18 11:55:10,468:INFO:Finalizing model
2025-08-18 11:55:23,961:INFO:Uploading results into container
2025-08-18 11:55:23,964:INFO:Uploading model into container now
2025-08-18 11:55:23,965:INFO:_master_model_container: 5
2025-08-18 11:55:23,965:INFO:_display_container: 4
2025-08-18 11:55:23,966:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:55:23,967:INFO:create_model() successfully completed......................................
2025-08-18 11:55:24,272:INFO:SubProcess create_model() end ==================================
2025-08-18 11:55:24,274:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-18 11:55:24,275:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-18 11:55:24,276:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-08-18 11:55:24,276:INFO:choose_better completed
2025-08-18 11:55:24,278:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-08-18 11:55:24,367:INFO:_master_model_container: 5
2025-08-18 11:55:24,367:INFO:_display_container: 3
2025-08-18 11:55:24,372:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:55:24,372:INFO:tune_model() successfully completed......................................
2025-08-18 11:55:24,526:INFO:Initializing finalize_model()
2025-08-18 11:55:24,527:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 11:55:24,528:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 11:55:24,535:INFO:Initializing create_model()
2025-08-18 11:55:24,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000023B3924DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 11:55:24,535:INFO:Checking exceptions
2025-08-18 11:55:24,537:INFO:Importing libraries
2025-08-18 11:55:24,537:INFO:Copying training dataset
2025-08-18 11:55:24,538:INFO:Defining folds
2025-08-18 11:55:24,538:INFO:Declaring metric variables
2025-08-18 11:55:24,538:INFO:Importing untrained model
2025-08-18 11:55:24,539:INFO:Declaring custom model
2025-08-18 11:55:24,540:INFO:Logistic Regression Imported successfully
2025-08-18 11:55:24,561:INFO:Cross validation set to False
2025-08-18 11:55:24,561:INFO:Fitting Model
2025-08-18 15:56:27,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 15:56:27,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 15:56:27,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 15:56:27,746:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 15:56:30,082:INFO:PyCaret ClassificationExperiment
2025-08-18 15:56:30,082:INFO:Logging name: clf-default-name
2025-08-18 15:56:30,082:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 15:56:30,082:INFO:version 3.3.2
2025-08-18 15:56:30,083:INFO:Initializing setup()
2025-08-18 15:56:30,083:INFO:self.USI: 0dcf
2025-08-18 15:56:30,083:INFO:self._variable_keys: {'X_train', 'fold_generator', 'X', 'exp_id', 'y_train', 'log_plots_param', 'html_param', 'gpu_param', 'target_param', '_ml_usecase', 'fold_groups_param', 'X_test', 'fold_shuffle_param', 'n_jobs_param', 'seed', 'fix_imbalance', 'exp_name_log', 'idx', 'y', 'logging_param', 'is_multiclass', 'gpu_n_jobs_param', 'pipeline', 'memory', 'y_test', '_available_plots', 'USI', 'data'}
2025-08-18 15:56:30,083:INFO:Checking environment
2025-08-18 15:56:30,083:INFO:python_version: 3.9.23
2025-08-18 15:56:30,083:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-18 15:56:30,083:INFO:machine: AMD64
2025-08-18 15:56:30,109:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-18 15:56:30,120:INFO:Memory: svmem(total=8458973184, available=1121087488, percent=86.7, used=7337885696, free=1121087488)
2025-08-18 15:56:30,121:INFO:Physical Core: 2
2025-08-18 15:56:30,121:INFO:Logical Core: 4
2025-08-18 15:56:30,121:INFO:Checking libraries
2025-08-18 15:56:30,121:INFO:System:
2025-08-18 15:56:30,121:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-18 15:56:30,121:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-18 15:56:30,121:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-18 15:56:30,121:INFO:PyCaret required dependencies:
2025-08-18 15:56:30,526:INFO:                 pip: 25.1
2025-08-18 15:56:30,527:INFO:          setuptools: 78.1.1
2025-08-18 15:56:30,527:INFO:             pycaret: 3.3.2
2025-08-18 15:56:30,527:INFO:             IPython: 8.18.1
2025-08-18 15:56:30,527:INFO:          ipywidgets: 8.1.7
2025-08-18 15:56:30,527:INFO:                tqdm: 4.67.1
2025-08-18 15:56:30,527:INFO:               numpy: 1.26.4
2025-08-18 15:56:30,527:INFO:              pandas: 2.1.4
2025-08-18 15:56:30,527:INFO:              jinja2: 3.1.6
2025-08-18 15:56:30,528:INFO:               scipy: 1.11.4
2025-08-18 15:56:30,528:INFO:              joblib: 1.5.1
2025-08-18 15:56:30,528:INFO:             sklearn: 1.4.2
2025-08-18 15:56:30,528:INFO:                pyod: 2.0.5
2025-08-18 15:56:30,528:INFO:            imblearn: 0.12.4
2025-08-18 15:56:30,528:INFO:   category_encoders: 2.6.4
2025-08-18 15:56:30,528:INFO:            lightgbm: 4.6.0
2025-08-18 15:56:30,528:INFO:               numba: 0.60.0
2025-08-18 15:56:30,528:INFO:            requests: 2.32.4
2025-08-18 15:56:30,528:INFO:          matplotlib: 3.7.5
2025-08-18 15:56:30,528:INFO:          scikitplot: 0.3.7
2025-08-18 15:56:30,528:INFO:         yellowbrick: 1.5
2025-08-18 15:56:30,528:INFO:              plotly: 5.24.1
2025-08-18 15:56:30,528:INFO:    plotly-resampler: Not installed
2025-08-18 15:56:30,528:INFO:             kaleido: 1.0.0
2025-08-18 15:56:30,528:INFO:           schemdraw: 0.15
2025-08-18 15:56:30,528:INFO:         statsmodels: 0.14.5
2025-08-18 15:56:30,529:INFO:              sktime: 0.26.0
2025-08-18 15:56:30,529:INFO:               tbats: 1.1.3
2025-08-18 15:56:30,529:INFO:            pmdarima: 2.0.4
2025-08-18 15:56:30,529:INFO:              psutil: 7.0.0
2025-08-18 15:56:30,529:INFO:          markupsafe: 3.0.2
2025-08-18 15:56:30,529:INFO:             pickle5: Not installed
2025-08-18 15:56:30,529:INFO:         cloudpickle: 3.1.1
2025-08-18 15:56:30,529:INFO:         deprecation: 2.1.0
2025-08-18 15:56:30,529:INFO:              xxhash: 3.5.0
2025-08-18 15:56:30,529:INFO:           wurlitzer: Not installed
2025-08-18 15:56:30,529:INFO:PyCaret optional dependencies:
2025-08-18 15:56:47,328:INFO:                shap: 0.44.1
2025-08-18 15:56:47,328:INFO:           interpret: 0.7.1
2025-08-18 15:56:47,328:INFO:                umap: 0.5.7
2025-08-18 15:56:47,329:INFO:     ydata_profiling: 4.16.1
2025-08-18 15:56:47,329:INFO:  explainerdashboard: 0.5.1
2025-08-18 15:56:47,330:INFO:             autoviz: Not installed
2025-08-18 15:56:47,331:INFO:           fairlearn: 0.7.0
2025-08-18 15:56:47,331:INFO:          deepchecks: Not installed
2025-08-18 15:56:47,332:INFO:             xgboost: Not installed
2025-08-18 15:56:47,332:INFO:            catboost: Not installed
2025-08-18 15:56:47,333:INFO:              kmodes: Not installed
2025-08-18 15:56:47,333:INFO:             mlxtend: Not installed
2025-08-18 15:56:47,333:INFO:       statsforecast: Not installed
2025-08-18 15:56:47,333:INFO:        tune_sklearn: Not installed
2025-08-18 15:56:47,333:INFO:                 ray: Not installed
2025-08-18 15:56:47,333:INFO:            hyperopt: Not installed
2025-08-18 15:56:47,334:INFO:              optuna: Not installed
2025-08-18 15:56:47,334:INFO:               skopt: Not installed
2025-08-18 15:56:47,334:INFO:              mlflow: Not installed
2025-08-18 15:56:47,334:INFO:              gradio: Not installed
2025-08-18 15:56:47,334:INFO:             fastapi: 0.116.1
2025-08-18 15:56:47,334:INFO:             uvicorn: 0.35.0
2025-08-18 15:56:47,334:INFO:              m2cgen: Not installed
2025-08-18 15:56:47,335:INFO:           evidently: Not installed
2025-08-18 15:56:47,335:INFO:               fugue: Not installed
2025-08-18 15:56:47,335:INFO:           streamlit: Not installed
2025-08-18 15:56:47,335:INFO:             prophet: Not installed
2025-08-18 15:56:47,335:INFO:None
2025-08-18 15:56:47,335:INFO:Set up data.
2025-08-18 15:56:47,479:INFO:Set up folding strategy.
2025-08-18 15:56:47,480:INFO:Set up train/test split.
2025-08-18 15:56:47,618:INFO:Set up index.
2025-08-18 15:56:47,618:INFO:Assigning column types.
2025-08-18 15:56:47,626:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 15:56:47,742:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 15:56:47,754:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 15:56:47,868:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:47,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:47,987:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 15:56:47,991:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 15:56:48,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,074:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 15:56:48,226:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 15:56:48,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,466:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 15:56:48,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,536:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 15:56:48,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:56:48,890:INFO:Preparing preprocessing pipeline...
2025-08-18 15:56:48,914:INFO:Set up label encoding.
2025-08-18 15:56:48,914:INFO:Set up simple imputation.
2025-08-18 15:56:48,914:INFO:Set up text embedding.
2025-08-18 15:56:48,915:INFO:Set up imbalanced handling.
2025-08-18 15:56:50,181:INFO:Finished creating preprocessing pipeline.
2025-08-18 15:56:50,217:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-08-18 15:56:50,217:INFO:Creating final display dataframe.
2025-08-18 15:57:15,640:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 3)
5           Transformed data shape              (7899, 7305)
6      Transformed train set shape              (6424, 7305)
7       Transformed test set shape              (1475, 7305)
8                 Numeric features                         1
9                    Text features                         1
10                      Preprocess                      True
11                 Imputation type                    simple
12              Numeric imputation                      mean
13          Categorical imputation                      mode
14  Text features embedding method                    tf-idf
15                   Fix imbalance                      True
16            Fix imbalance method                     SMOTE
17                  Fold Generator           StratifiedKFold
18                     Fold Number                         5
19                        CPU Jobs                        -1
20                         Use GPU                     False
21                  Log Experiment                     False
22                 Experiment Name          clf-default-name
23                             USI                      0dcf
2025-08-18 15:57:15,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:57:15,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:57:16,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:57:16,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 15:57:16,043:INFO:setup() successfully completed in 46.0s...............
2025-08-18 15:57:16,043:INFO:Initializing compare_models()
2025-08-18 15:57:16,043:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-18 15:57:16,043:INFO:Checking exceptions
2025-08-18 15:57:16,118:INFO:Preparing display monitor
2025-08-18 15:57:19,199:INFO:Initializing Logistic Regression
2025-08-18 15:57:19,199:INFO:Total runtime is 0.0 minutes
2025-08-18 15:57:19,199:INFO:SubProcess create_model() called ==================================
2025-08-18 15:57:19,200:INFO:Initializing create_model()
2025-08-18 15:57:19,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002361FD9FC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 15:57:19,200:INFO:Checking exceptions
2025-08-18 15:57:19,200:INFO:Importing libraries
2025-08-18 15:57:19,201:INFO:Copying training dataset
2025-08-18 15:57:19,210:INFO:Defining folds
2025-08-18 15:57:19,210:INFO:Declaring metric variables
2025-08-18 15:57:19,210:INFO:Importing untrained model
2025-08-18 15:57:19,211:INFO:Logistic Regression Imported successfully
2025-08-18 15:57:19,212:INFO:Starting cross validation
2025-08-18 15:57:19,249:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 15:58:19,064:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:19,130:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:19,203:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:23,372:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:23,412:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:23,453:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:24,138:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:24,163:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:24,182:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:24,522:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:24,544:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:24,575:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:32,744:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:32,760:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:32,773:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:32,816:INFO:Calculating mean and std
2025-08-18 15:58:32,875:INFO:Creating metrics dataframe
2025-08-18 15:58:32,906:INFO:Uploading results into container
2025-08-18 15:58:32,909:INFO:Uploading model into container now
2025-08-18 15:58:32,917:INFO:_master_model_container: 1
2025-08-18 15:58:32,917:INFO:_display_container: 2
2025-08-18 15:58:32,922:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 15:58:32,924:INFO:create_model() successfully completed......................................
2025-08-18 15:58:34,530:INFO:SubProcess create_model() end ==================================
2025-08-18 15:58:34,530:INFO:Creating metrics dataframe
2025-08-18 15:58:34,537:INFO:Initializing SVM - Linear Kernel
2025-08-18 15:58:34,537:INFO:Total runtime is 1.2556214292844137 minutes
2025-08-18 15:58:34,537:INFO:SubProcess create_model() called ==================================
2025-08-18 15:58:34,538:INFO:Initializing create_model()
2025-08-18 15:58:34,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002361FD9FC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 15:58:34,538:INFO:Checking exceptions
2025-08-18 15:58:34,538:INFO:Importing libraries
2025-08-18 15:58:34,538:INFO:Copying training dataset
2025-08-18 15:58:34,545:INFO:Defining folds
2025-08-18 15:58:34,545:INFO:Declaring metric variables
2025-08-18 15:58:34,545:INFO:Importing untrained model
2025-08-18 15:58:34,546:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 15:58:34,547:INFO:Starting cross validation
2025-08-18 15:58:34,583:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 15:58:59,333:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:59,333:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:59,358:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:59,358:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:59,358:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:59,374:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:58:59,375:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:07,685:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:07,703:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:07,722:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:07,763:INFO:Calculating mean and std
2025-08-18 15:59:07,765:INFO:Creating metrics dataframe
2025-08-18 15:59:07,772:INFO:Uploading results into container
2025-08-18 15:59:07,774:INFO:Uploading model into container now
2025-08-18 15:59:07,775:INFO:_master_model_container: 2
2025-08-18 15:59:07,775:INFO:_display_container: 2
2025-08-18 15:59:07,777:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 15:59:07,778:INFO:create_model() successfully completed......................................
2025-08-18 15:59:07,971:INFO:SubProcess create_model() end ==================================
2025-08-18 15:59:07,971:INFO:Creating metrics dataframe
2025-08-18 15:59:08,035:INFO:Initializing Random Forest Classifier
2025-08-18 15:59:08,036:INFO:Total runtime is 1.8139398535092672 minutes
2025-08-18 15:59:08,036:INFO:SubProcess create_model() called ==================================
2025-08-18 15:59:08,037:INFO:Initializing create_model()
2025-08-18 15:59:08,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002361FD9FC10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 15:59:08,037:INFO:Checking exceptions
2025-08-18 15:59:08,037:INFO:Importing libraries
2025-08-18 15:59:08,038:INFO:Copying training dataset
2025-08-18 15:59:08,048:INFO:Defining folds
2025-08-18 15:59:08,049:INFO:Declaring metric variables
2025-08-18 15:59:08,049:INFO:Importing untrained model
2025-08-18 15:59:08,051:INFO:Random Forest Classifier Imported successfully
2025-08-18 15:59:08,052:INFO:Starting cross validation
2025-08-18 15:59:08,118:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 15:59:36,844:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,844:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,884:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,885:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,885:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,903:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,903:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:36,903:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:37,001:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:37,018:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:37,034:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:45,554:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:45,565:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:45,575:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 15:59:45,604:INFO:Calculating mean and std
2025-08-18 15:59:45,606:INFO:Creating metrics dataframe
2025-08-18 15:59:45,610:INFO:Uploading results into container
2025-08-18 15:59:45,611:INFO:Uploading model into container now
2025-08-18 15:59:45,611:INFO:_master_model_container: 3
2025-08-18 15:59:45,611:INFO:_display_container: 2
2025-08-18 15:59:45,612:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-18 15:59:45,612:INFO:create_model() successfully completed......................................
2025-08-18 15:59:45,771:INFO:SubProcess create_model() end ==================================
2025-08-18 15:59:45,772:INFO:Creating metrics dataframe
2025-08-18 15:59:45,780:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-18 15:59:45,788:INFO:Initializing create_model()
2025-08-18 15:59:45,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 15:59:45,789:INFO:Checking exceptions
2025-08-18 15:59:45,790:INFO:Importing libraries
2025-08-18 15:59:45,790:INFO:Copying training dataset
2025-08-18 15:59:45,814:INFO:Defining folds
2025-08-18 15:59:45,814:INFO:Declaring metric variables
2025-08-18 15:59:45,814:INFO:Importing untrained model
2025-08-18 15:59:45,814:INFO:Declaring custom model
2025-08-18 15:59:45,816:INFO:Logistic Regression Imported successfully
2025-08-18 15:59:45,861:INFO:Cross validation set to False
2025-08-18 15:59:45,861:INFO:Fitting Model
2025-08-18 15:59:56,745:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 15:59:56,746:INFO:create_model() successfully completed......................................
2025-08-18 15:59:56,981:INFO:_master_model_container: 3
2025-08-18 15:59:56,982:INFO:_display_container: 2
2025-08-18 15:59:56,984:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 15:59:56,984:INFO:compare_models() successfully completed......................................
2025-08-18 15:59:56,989:INFO:Initializing tune_model()
2025-08-18 15:59:56,990:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>)
2025-08-18 15:59:56,990:INFO:Checking exceptions
2025-08-18 15:59:57,001:INFO:Copying training dataset
2025-08-18 15:59:57,010:INFO:Checking base model
2025-08-18 15:59:57,010:INFO:Base model : Logistic Regression
2025-08-18 15:59:57,011:INFO:Declaring metric variables
2025-08-18 15:59:57,011:INFO:Defining Hyperparameters
2025-08-18 15:59:57,168:INFO:Tuning with n_jobs=-1
2025-08-18 15:59:57,168:INFO:Initializing RandomizedSearchCV
2025-08-18 16:00:20,890:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:21,419:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:21,578:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:21,733:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:43,699:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:46,306:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:46,318:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:00:47,506:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:03,312:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:06,787:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:07,524:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:07,759:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:21,291:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:24,383:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:25,745:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:25,875:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:42,208:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:46,786:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:49,725:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:01:49,832:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:02,531:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:06,545:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:10,564:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:10,913:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:22,779:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:25,466:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:31,426:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:32,845:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:46,315:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:49,288:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:55,597:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:02:56,291:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:08,497:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:09,797:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:18,340:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:19,078:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:35,646:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:36,627:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:45,417:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:45,787:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:58,471:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:03:58,760:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:10,766:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:10,867:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:28,712:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:28,741:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:45,967:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:46,235:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:54,594:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:54,808:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:04:54,937:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2025-08-18 16:04:54,994:INFO:Hyperparameter search completed
2025-08-18 16:04:54,994:INFO:SubProcess create_model() called ==================================
2025-08-18 16:04:55,018:INFO:Initializing create_model()
2025-08-18 16:04:55,018:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002361FD9F400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.049})
2025-08-18 16:04:55,019:INFO:Checking exceptions
2025-08-18 16:04:55,020:INFO:Importing libraries
2025-08-18 16:04:55,035:INFO:Copying training dataset
2025-08-18 16:04:55,110:INFO:Defining folds
2025-08-18 16:04:55,110:INFO:Declaring metric variables
2025-08-18 16:04:55,116:INFO:Importing untrained model
2025-08-18 16:04:55,116:INFO:Declaring custom model
2025-08-18 16:04:55,126:INFO:Logistic Regression Imported successfully
2025-08-18 16:04:55,131:INFO:Starting cross validation
2025-08-18 16:04:55,179:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:05:28,132:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:28,179:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:28,230:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,245:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,295:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,331:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,511:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,554:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,582:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,630:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,663:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:29,699:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:45,611:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:45,629:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:45,648:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:05:45,717:INFO:Calculating mean and std
2025-08-18 16:05:45,722:INFO:Creating metrics dataframe
2025-08-18 16:05:45,771:INFO:Finalizing model
2025-08-18 16:06:08,640:INFO:Uploading results into container
2025-08-18 16:06:08,642:INFO:Uploading model into container now
2025-08-18 16:06:08,643:INFO:_master_model_container: 4
2025-08-18 16:06:08,643:INFO:_display_container: 3
2025-08-18 16:06:08,644:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:06:08,644:INFO:create_model() successfully completed......................................
2025-08-18 16:06:08,924:INFO:SubProcess create_model() end ==================================
2025-08-18 16:06:08,925:INFO:choose_better activated
2025-08-18 16:06:08,925:INFO:SubProcess create_model() called ==================================
2025-08-18 16:06:08,927:INFO:Initializing create_model()
2025-08-18 16:06:08,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:06:08,928:INFO:Checking exceptions
2025-08-18 16:06:08,962:INFO:Importing libraries
2025-08-18 16:06:08,962:INFO:Copying training dataset
2025-08-18 16:06:08,974:INFO:Defining folds
2025-08-18 16:06:08,974:INFO:Declaring metric variables
2025-08-18 16:06:08,975:INFO:Importing untrained model
2025-08-18 16:06:08,975:INFO:Declaring custom model
2025-08-18 16:06:08,977:INFO:Logistic Regression Imported successfully
2025-08-18 16:06:08,978:INFO:Starting cross validation
2025-08-18 16:06:09,027:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:06:50,489:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:50,625:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:50,654:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:52,237:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:52,351:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:52,381:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:52,474:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:52,421:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:52,514:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:56,170:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:56,242:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:06:56,288:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:07:11,140:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:07:11,159:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:07:11,180:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:07:11,226:INFO:Calculating mean and std
2025-08-18 16:07:11,228:INFO:Creating metrics dataframe
2025-08-18 16:07:11,235:INFO:Finalizing model
2025-08-18 16:07:28,759:INFO:Uploading results into container
2025-08-18 16:07:28,760:INFO:Uploading model into container now
2025-08-18 16:07:28,761:INFO:_master_model_container: 5
2025-08-18 16:07:28,761:INFO:_display_container: 4
2025-08-18 16:07:28,762:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:07:28,762:INFO:create_model() successfully completed......................................
2025-08-18 16:07:29,073:INFO:SubProcess create_model() end ==================================
2025-08-18 16:07:29,075:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-18 16:07:29,076:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-18 16:07:29,077:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-08-18 16:07:29,077:INFO:choose_better completed
2025-08-18 16:07:29,078:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-08-18 16:07:29,177:INFO:_master_model_container: 5
2025-08-18 16:07:29,178:INFO:_display_container: 3
2025-08-18 16:07:29,179:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:07:29,179:INFO:tune_model() successfully completed......................................
2025-08-18 16:07:29,422:INFO:Initializing finalize_model()
2025-08-18 16:07:29,422:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 16:07:29,423:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:07:29,428:INFO:Initializing create_model()
2025-08-18 16:07:29,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002360160DF40>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:07:29,429:INFO:Checking exceptions
2025-08-18 16:07:29,436:INFO:Importing libraries
2025-08-18 16:07:29,436:INFO:Copying training dataset
2025-08-18 16:07:29,437:INFO:Defining folds
2025-08-18 16:07:29,437:INFO:Declaring metric variables
2025-08-18 16:07:29,438:INFO:Importing untrained model
2025-08-18 16:07:29,438:INFO:Declaring custom model
2025-08-18 16:07:29,441:INFO:Logistic Regression Imported successfully
2025-08-18 16:07:29,493:INFO:Cross validation set to False
2025-08-18 16:07:29,493:INFO:Fitting Model
2025-08-18 16:32:22,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:32:22,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:32:22,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:32:22,128:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:32:30,663:INFO:PyCaret ClassificationExperiment
2025-08-18 16:32:30,663:INFO:Logging name: clf-default-name
2025-08-18 16:32:30,664:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 16:32:30,664:INFO:version 3.3.2
2025-08-18 16:32:30,664:INFO:Initializing setup()
2025-08-18 16:32:30,664:INFO:self.USI: ef87
2025-08-18 16:32:30,664:INFO:self._variable_keys: {'fold_generator', 'X', 'y_train', 'is_multiclass', 'idx', '_ml_usecase', 'fold_groups_param', 'html_param', 'X_train', 'pipeline', 'y', 'USI', 'n_jobs_param', 'fold_shuffle_param', 'log_plots_param', 'target_param', 'seed', 'y_test', '_available_plots', 'exp_id', 'X_test', 'memory', 'data', 'fix_imbalance', 'gpu_n_jobs_param', 'logging_param', 'gpu_param', 'exp_name_log'}
2025-08-18 16:32:30,664:INFO:Checking environment
2025-08-18 16:32:30,664:INFO:python_version: 3.9.23
2025-08-18 16:32:30,664:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-18 16:32:30,664:INFO:machine: AMD64
2025-08-18 16:32:30,697:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-18 16:32:30,702:INFO:Memory: svmem(total=8458973184, available=1457446912, percent=82.8, used=7001526272, free=1457446912)
2025-08-18 16:32:30,702:INFO:Physical Core: 2
2025-08-18 16:32:30,702:INFO:Logical Core: 4
2025-08-18 16:32:30,702:INFO:Checking libraries
2025-08-18 16:32:30,702:INFO:System:
2025-08-18 16:32:30,702:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-18 16:32:30,702:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-18 16:32:30,702:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-18 16:32:30,702:INFO:PyCaret required dependencies:
2025-08-18 16:32:30,939:INFO:                 pip: 25.1
2025-08-18 16:32:30,939:INFO:          setuptools: 78.1.1
2025-08-18 16:32:30,939:INFO:             pycaret: 3.3.2
2025-08-18 16:32:30,939:INFO:             IPython: 8.18.1
2025-08-18 16:32:30,939:INFO:          ipywidgets: 8.1.7
2025-08-18 16:32:30,939:INFO:                tqdm: 4.67.1
2025-08-18 16:32:30,939:INFO:               numpy: 1.26.4
2025-08-18 16:32:30,939:INFO:              pandas: 2.1.4
2025-08-18 16:32:30,939:INFO:              jinja2: 3.1.6
2025-08-18 16:32:30,940:INFO:               scipy: 1.11.4
2025-08-18 16:32:30,940:INFO:              joblib: 1.5.1
2025-08-18 16:32:30,940:INFO:             sklearn: 1.4.2
2025-08-18 16:32:30,940:INFO:                pyod: 2.0.5
2025-08-18 16:32:30,940:INFO:            imblearn: 0.12.4
2025-08-18 16:32:30,940:INFO:   category_encoders: 2.6.4
2025-08-18 16:32:30,940:INFO:            lightgbm: 4.6.0
2025-08-18 16:32:30,940:INFO:               numba: 0.60.0
2025-08-18 16:32:30,940:INFO:            requests: 2.32.4
2025-08-18 16:32:30,940:INFO:          matplotlib: 3.7.5
2025-08-18 16:32:30,940:INFO:          scikitplot: 0.3.7
2025-08-18 16:32:30,940:INFO:         yellowbrick: 1.5
2025-08-18 16:32:30,941:INFO:              plotly: 5.24.1
2025-08-18 16:32:30,941:INFO:    plotly-resampler: Not installed
2025-08-18 16:32:30,941:INFO:             kaleido: 1.0.0
2025-08-18 16:32:30,941:INFO:           schemdraw: 0.15
2025-08-18 16:32:30,941:INFO:         statsmodels: 0.14.5
2025-08-18 16:32:30,941:INFO:              sktime: 0.26.0
2025-08-18 16:32:30,941:INFO:               tbats: 1.1.3
2025-08-18 16:32:30,941:INFO:            pmdarima: 2.0.4
2025-08-18 16:32:30,941:INFO:              psutil: 7.0.0
2025-08-18 16:32:30,941:INFO:          markupsafe: 3.0.2
2025-08-18 16:32:30,941:INFO:             pickle5: Not installed
2025-08-18 16:32:30,941:INFO:         cloudpickle: 3.1.1
2025-08-18 16:32:30,941:INFO:         deprecation: 2.1.0
2025-08-18 16:32:30,941:INFO:              xxhash: 3.5.0
2025-08-18 16:32:30,942:INFO:           wurlitzer: Not installed
2025-08-18 16:32:30,942:INFO:PyCaret optional dependencies:
2025-08-18 16:32:44,151:INFO:                shap: 0.44.1
2025-08-18 16:32:44,152:INFO:           interpret: 0.7.1
2025-08-18 16:32:44,152:INFO:                umap: 0.5.7
2025-08-18 16:32:44,152:INFO:     ydata_profiling: 4.16.1
2025-08-18 16:32:44,152:INFO:  explainerdashboard: 0.5.1
2025-08-18 16:32:44,153:INFO:             autoviz: Not installed
2025-08-18 16:32:44,153:INFO:           fairlearn: 0.7.0
2025-08-18 16:32:44,153:INFO:          deepchecks: Not installed
2025-08-18 16:32:44,153:INFO:             xgboost: Not installed
2025-08-18 16:32:44,153:INFO:            catboost: Not installed
2025-08-18 16:32:44,153:INFO:              kmodes: Not installed
2025-08-18 16:32:44,153:INFO:             mlxtend: Not installed
2025-08-18 16:32:44,153:INFO:       statsforecast: Not installed
2025-08-18 16:32:44,154:INFO:        tune_sklearn: Not installed
2025-08-18 16:32:44,154:INFO:                 ray: Not installed
2025-08-18 16:32:44,154:INFO:            hyperopt: Not installed
2025-08-18 16:32:44,154:INFO:              optuna: Not installed
2025-08-18 16:32:44,154:INFO:               skopt: Not installed
2025-08-18 16:32:44,154:INFO:              mlflow: Not installed
2025-08-18 16:32:44,154:INFO:              gradio: Not installed
2025-08-18 16:32:44,155:INFO:             fastapi: 0.116.1
2025-08-18 16:32:44,155:INFO:             uvicorn: 0.35.0
2025-08-18 16:32:44,155:INFO:              m2cgen: Not installed
2025-08-18 16:32:44,155:INFO:           evidently: Not installed
2025-08-18 16:32:44,155:INFO:               fugue: Not installed
2025-08-18 16:32:44,155:INFO:           streamlit: Not installed
2025-08-18 16:32:44,155:INFO:             prophet: Not installed
2025-08-18 16:32:44,155:INFO:None
2025-08-18 16:32:44,156:INFO:Set up data.
2025-08-18 16:32:44,274:INFO:Set up folding strategy.
2025-08-18 16:32:44,274:INFO:Set up train/test split.
2025-08-18 16:32:44,361:INFO:Set up index.
2025-08-18 16:32:44,361:INFO:Assigning column types.
2025-08-18 16:32:44,386:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 16:32:44,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 16:32:44,480:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 16:32:44,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:44,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:44,712:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 16:32:44,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 16:32:44,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:44,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:44,797:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 16:32:44,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 16:32:44,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:44,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,046:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 16:32:45,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,102:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 16:32:45,235:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:45,425:INFO:Preparing preprocessing pipeline...
2025-08-18 16:32:45,458:INFO:Set up label encoding.
2025-08-18 16:32:45,458:INFO:Set up simple imputation.
2025-08-18 16:32:45,458:INFO:Set up text embedding.
2025-08-18 16:32:46,886:INFO:Finished creating preprocessing pipeline.
2025-08-18 16:32:46,906:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf')))],
         verbose=False)
2025-08-18 16:32:46,907:INFO:Creating final display dataframe.
2025-08-18 16:32:54,979:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 3)
5           Transformed data shape              (4914, 7305)
6      Transformed train set shape              (3439, 7305)
7       Transformed test set shape              (1475, 7305)
8                 Numeric features                         1
9                    Text features                         1
10                      Preprocess                      True
11                 Imputation type                    simple
12              Numeric imputation                      mean
13          Categorical imputation                      mode
14  Text features embedding method                    tf-idf
15                  Fold Generator           StratifiedKFold
16                     Fold Number                         5
17                        CPU Jobs                        -1
18                         Use GPU                     False
19                  Log Experiment                     False
20                 Experiment Name          clf-default-name
21                             USI                      ef87
2025-08-18 16:32:55,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:55,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:55,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:55,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 16:32:55,296:INFO:setup() successfully completed in 24.68s...............
2025-08-18 16:32:55,296:INFO:Initializing compare_models()
2025-08-18 16:32:55,296:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-18 16:32:55,296:INFO:Checking exceptions
2025-08-18 16:32:55,326:INFO:Preparing display monitor
2025-08-18 16:32:55,367:INFO:Initializing Logistic Regression
2025-08-18 16:32:55,367:INFO:Total runtime is 0.0 minutes
2025-08-18 16:32:55,368:INFO:SubProcess create_model() called ==================================
2025-08-18 16:32:55,368:INFO:Initializing create_model()
2025-08-18 16:32:55,368:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D6231F280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:32:55,368:INFO:Checking exceptions
2025-08-18 16:32:55,368:INFO:Importing libraries
2025-08-18 16:32:55,368:INFO:Copying training dataset
2025-08-18 16:32:55,376:INFO:Defining folds
2025-08-18 16:32:55,377:INFO:Declaring metric variables
2025-08-18 16:32:55,377:INFO:Importing untrained model
2025-08-18 16:32:55,378:INFO:Logistic Regression Imported successfully
2025-08-18 16:32:55,378:INFO:Starting cross validation
2025-08-18 16:32:55,397:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:33:16,032:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,033:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,033:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,049:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,050:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,050:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,065:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,066:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,287:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,305:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:16,321:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:19,733:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:19,745:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:19,755:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:19,789:INFO:Calculating mean and std
2025-08-18 16:33:19,825:INFO:Creating metrics dataframe
2025-08-18 16:33:19,843:INFO:Uploading results into container
2025-08-18 16:33:19,844:INFO:Uploading model into container now
2025-08-18 16:33:19,845:INFO:_master_model_container: 1
2025-08-18 16:33:19,845:INFO:_display_container: 2
2025-08-18 16:33:19,846:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:33:19,846:INFO:create_model() successfully completed......................................
2025-08-18 16:33:19,986:INFO:SubProcess create_model() end ==================================
2025-08-18 16:33:19,986:INFO:Creating metrics dataframe
2025-08-18 16:33:20,036:INFO:Initializing SVM - Linear Kernel
2025-08-18 16:33:20,036:INFO:Total runtime is 0.4111488342285156 minutes
2025-08-18 16:33:20,036:INFO:SubProcess create_model() called ==================================
2025-08-18 16:33:20,037:INFO:Initializing create_model()
2025-08-18 16:33:20,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D6231F280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:33:20,037:INFO:Checking exceptions
2025-08-18 16:33:20,037:INFO:Importing libraries
2025-08-18 16:33:20,037:INFO:Copying training dataset
2025-08-18 16:33:20,045:INFO:Defining folds
2025-08-18 16:33:20,045:INFO:Declaring metric variables
2025-08-18 16:33:20,045:INFO:Importing untrained model
2025-08-18 16:33:20,046:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 16:33:20,046:INFO:Starting cross validation
2025-08-18 16:33:20,065:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:33:25,913:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:25,933:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:25,951:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:25,995:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,020:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,040:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,041:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,059:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,059:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,076:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,078:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:26,095:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:29,496:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:29,535:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:29,560:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:29,604:INFO:Calculating mean and std
2025-08-18 16:33:29,606:INFO:Creating metrics dataframe
2025-08-18 16:33:29,611:INFO:Uploading results into container
2025-08-18 16:33:29,613:INFO:Uploading model into container now
2025-08-18 16:33:29,613:INFO:_master_model_container: 2
2025-08-18 16:33:29,614:INFO:_display_container: 2
2025-08-18 16:33:29,615:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 16:33:29,615:INFO:create_model() successfully completed......................................
2025-08-18 16:33:29,778:INFO:SubProcess create_model() end ==================================
2025-08-18 16:33:29,780:INFO:Creating metrics dataframe
2025-08-18 16:33:29,816:INFO:Initializing Random Forest Classifier
2025-08-18 16:33:29,817:INFO:Total runtime is 0.5741583069165548 minutes
2025-08-18 16:33:29,817:INFO:SubProcess create_model() called ==================================
2025-08-18 16:33:29,818:INFO:Initializing create_model()
2025-08-18 16:33:29,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D6231F280>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:33:29,821:INFO:Checking exceptions
2025-08-18 16:33:29,821:INFO:Importing libraries
2025-08-18 16:33:29,821:INFO:Copying training dataset
2025-08-18 16:33:29,840:INFO:Defining folds
2025-08-18 16:33:29,841:INFO:Declaring metric variables
2025-08-18 16:33:29,841:INFO:Importing untrained model
2025-08-18 16:33:29,843:INFO:Random Forest Classifier Imported successfully
2025-08-18 16:33:29,844:INFO:Starting cross validation
2025-08-18 16:33:29,883:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:33:40,555:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,581:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,589:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,594:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,598:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,609:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,614:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,636:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,639:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,661:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,704:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:40,739:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:47,615:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:47,634:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:47,660:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:33:47,717:INFO:Calculating mean and std
2025-08-18 16:33:47,722:INFO:Creating metrics dataframe
2025-08-18 16:33:47,728:INFO:Uploading results into container
2025-08-18 16:33:47,730:INFO:Uploading model into container now
2025-08-18 16:33:47,731:INFO:_master_model_container: 3
2025-08-18 16:33:47,731:INFO:_display_container: 2
2025-08-18 16:33:47,734:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-18 16:33:47,735:INFO:create_model() successfully completed......................................
2025-08-18 16:33:47,917:INFO:SubProcess create_model() end ==================================
2025-08-18 16:33:47,917:INFO:Creating metrics dataframe
2025-08-18 16:33:47,926:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-18 16:33:47,931:INFO:Initializing create_model()
2025-08-18 16:33:47,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:33:47,931:INFO:Checking exceptions
2025-08-18 16:33:47,934:INFO:Importing libraries
2025-08-18 16:33:47,934:INFO:Copying training dataset
2025-08-18 16:33:47,948:INFO:Defining folds
2025-08-18 16:33:47,948:INFO:Declaring metric variables
2025-08-18 16:33:47,949:INFO:Importing untrained model
2025-08-18 16:33:47,949:INFO:Declaring custom model
2025-08-18 16:33:47,950:INFO:Logistic Regression Imported successfully
2025-08-18 16:33:47,970:INFO:Cross validation set to False
2025-08-18 16:33:47,970:INFO:Fitting Model
2025-08-18 16:33:51,261:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:33:51,261:INFO:create_model() successfully completed......................................
2025-08-18 16:33:51,494:INFO:_master_model_container: 3
2025-08-18 16:33:51,495:INFO:_display_container: 2
2025-08-18 16:33:51,497:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:33:51,497:INFO:compare_models() successfully completed......................................
2025-08-18 16:33:51,499:INFO:Initializing tune_model()
2025-08-18 16:33:51,499:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>)
2025-08-18 16:33:51,499:INFO:Checking exceptions
2025-08-18 16:33:51,508:INFO:Copying training dataset
2025-08-18 16:33:51,519:INFO:Checking base model
2025-08-18 16:33:51,520:INFO:Base model : Logistic Regression
2025-08-18 16:33:51,521:INFO:Declaring metric variables
2025-08-18 16:33:51,522:INFO:Defining Hyperparameters
2025-08-18 16:33:51,736:INFO:Tuning with n_jobs=-1
2025-08-18 16:33:51,737:INFO:Initializing RandomizedSearchCV
2025-08-18 16:34:00,662:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:01,129:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:01,157:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:01,302:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:09,182:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:09,316:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:09,417:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:09,736:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:15,805:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:15,960:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:16,000:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:16,154:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:21,781:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:22,672:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:22,698:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:22,735:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:28,371:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:29,961:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:29,993:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:30,209:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:37,703:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:39,551:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:39,825:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:39,891:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:47,092:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:47,853:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:48,021:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:48,403:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:55,473:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:57,357:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:58,254:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:34:58,525:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:06,079:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:06,971:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:07,618:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:07,775:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:12,116:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:14,961:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:15,652:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:16,192:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:21,630:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:25,253:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:26,191:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:26,311:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:30,786:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:33,203:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:33,858:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:33,954:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:36,496:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:38,515:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:38,560:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 0.049}
2025-08-18 16:35:38,561:INFO:Hyperparameter search completed
2025-08-18 16:35:38,562:INFO:SubProcess create_model() called ==================================
2025-08-18 16:35:38,564:INFO:Initializing create_model()
2025-08-18 16:35:38,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021D62388130>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'C': 0.049})
2025-08-18 16:35:38,564:INFO:Checking exceptions
2025-08-18 16:35:38,565:INFO:Importing libraries
2025-08-18 16:35:38,565:INFO:Copying training dataset
2025-08-18 16:35:38,579:INFO:Defining folds
2025-08-18 16:35:38,579:INFO:Declaring metric variables
2025-08-18 16:35:38,580:INFO:Importing untrained model
2025-08-18 16:35:38,581:INFO:Declaring custom model
2025-08-18 16:35:38,583:INFO:Logistic Regression Imported successfully
2025-08-18 16:35:38,583:INFO:Starting cross validation
2025-08-18 16:35:38,611:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:35:47,461:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,491:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,507:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,525:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,532:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,545:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,550:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,568:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,583:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,592:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,611:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:47,641:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:51,632:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:51,646:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:51,659:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:35:51,693:INFO:Calculating mean and std
2025-08-18 16:35:51,695:INFO:Creating metrics dataframe
2025-08-18 16:35:51,700:INFO:Finalizing model
2025-08-18 16:35:55,682:INFO:Uploading results into container
2025-08-18 16:35:55,684:INFO:Uploading model into container now
2025-08-18 16:35:55,685:INFO:_master_model_container: 4
2025-08-18 16:35:55,685:INFO:_display_container: 3
2025-08-18 16:35:55,686:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:35:55,686:INFO:create_model() successfully completed......................................
2025-08-18 16:35:55,939:INFO:SubProcess create_model() end ==================================
2025-08-18 16:35:55,939:INFO:choose_better activated
2025-08-18 16:35:55,939:INFO:SubProcess create_model() called ==================================
2025-08-18 16:35:55,941:INFO:Initializing create_model()
2025-08-18 16:35:55,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:35:55,941:INFO:Checking exceptions
2025-08-18 16:35:55,943:INFO:Importing libraries
2025-08-18 16:35:55,943:INFO:Copying training dataset
2025-08-18 16:35:55,954:INFO:Defining folds
2025-08-18 16:35:55,954:INFO:Declaring metric variables
2025-08-18 16:35:55,955:INFO:Importing untrained model
2025-08-18 16:35:55,955:INFO:Declaring custom model
2025-08-18 16:35:55,957:INFO:Logistic Regression Imported successfully
2025-08-18 16:35:55,958:INFO:Starting cross validation
2025-08-18 16:35:55,987:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 16:36:06,946:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:06,983:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,021:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,076:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,156:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,184:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,429:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,452:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,473:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,632:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,654:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:07,682:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:12,415:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:12,437:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:12,463:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 16:36:12,533:INFO:Calculating mean and std
2025-08-18 16:36:12,535:INFO:Creating metrics dataframe
2025-08-18 16:36:12,548:INFO:Finalizing model
2025-08-18 16:36:16,532:INFO:Uploading results into container
2025-08-18 16:36:16,533:INFO:Uploading model into container now
2025-08-18 16:36:16,533:INFO:_master_model_container: 5
2025-08-18 16:36:16,533:INFO:_display_container: 4
2025-08-18 16:36:16,534:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:36:16,534:INFO:create_model() successfully completed......................................
2025-08-18 16:36:16,779:INFO:SubProcess create_model() end ==================================
2025-08-18 16:36:16,780:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-18 16:36:16,781:INFO:LogisticRegression(C=0.049, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for F1 is 1.0
2025-08-18 16:36:16,781:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2025-08-18 16:36:16,781:INFO:choose_better completed
2025-08-18 16:36:16,782:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-08-18 16:36:16,813:INFO:_master_model_container: 5
2025-08-18 16:36:16,813:INFO:_display_container: 3
2025-08-18 16:36:16,815:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:36:16,815:INFO:tune_model() successfully completed......................................
2025-08-18 16:36:17,017:INFO:Initializing finalize_model()
2025-08-18 16:36:17,017:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 16:36:17,017:INFO:Finalizing LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 16:36:17,023:INFO:Initializing create_model()
2025-08-18 16:36:17,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021D43AADCD0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 16:36:17,025:INFO:Checking exceptions
2025-08-18 16:36:17,027:INFO:Importing libraries
2025-08-18 16:36:17,027:INFO:Copying training dataset
2025-08-18 16:36:17,028:INFO:Defining folds
2025-08-18 16:36:17,028:INFO:Declaring metric variables
2025-08-18 16:36:17,028:INFO:Importing untrained model
2025-08-18 16:36:17,029:INFO:Declaring custom model
2025-08-18 16:36:17,030:INFO:Logistic Regression Imported successfully
2025-08-18 16:36:17,054:INFO:Cross validation set to False
2025-08-18 16:36:17,054:INFO:Fitting Model
2025-08-18 16:36:25,443:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='me...
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 16:36:25,443:INFO:create_model() successfully completed......................................
2025-08-18 16:36:25,583:INFO:_master_model_container: 5
2025-08-18 16:36:25,583:INFO:_display_container: 3
2025-08-18 16:36:25,593:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='me...
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 16:36:25,593:INFO:finalize_model() successfully completed......................................
2025-08-18 16:36:25,700:INFO:Initializing save_model()
2025-08-18 16:36:25,700:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='me...
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), model_name=sentiment_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-18 16:36:25,700:INFO:Adding model into prep_pipe
2025-08-18 16:36:25,701:WARNING:Only Model saved as it was a pipeline.
2025-08-18 16:36:25,825:INFO:sentiment_model.pkl saved in current working directory
2025-08-18 16:36:25,835:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['overall'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='me...
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-08-18 16:36:25,836:INFO:save_model() successfully completed......................................
2025-08-18 16:59:29,099:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:59:29,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:59:29,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:59:29,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 16:59:30,786:INFO:Initializing load_model()
2025-08-18 16:59:30,787:INFO:load_model(model_name=sentiment_model, platform=None, authentication=None, verbose=True)
2025-08-18 16:59:31,088:INFO:Initializing predict_model()
2025-08-18 16:59:31,089:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AD0C3ED070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['overall'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(include=['reviewText'],
                                    transformer=EmbedTextFeatures())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AD0BF9F160>)
2025-08-18 16:59:31,089:INFO:Checking exceptions
2025-08-18 16:59:31,089:INFO:Preloading libraries
2025-08-18 16:59:31,089:INFO:Set up data.
2025-08-18 16:59:31,092:INFO:Set up index.
2025-08-18 17:00:53,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:00:53,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:00:53,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:00:53,364:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:00:56,354:INFO:Initializing load_model()
2025-08-18 17:00:56,354:INFO:load_model(model_name=sentiment_model, platform=None, authentication=None, verbose=True)
2025-08-18 17:00:57,001:INFO:Initializing predict_model()
2025-08-18 17:00:57,002:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000013F8996D070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['overall'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(include=['reviewText'],
                                    transformer=EmbedTextFeatures())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000013F8951F160>)
2025-08-18 17:00:57,002:INFO:Checking exceptions
2025-08-18 17:00:57,002:INFO:Preloading libraries
2025-08-18 17:00:57,006:INFO:Set up data.
2025-08-18 17:00:57,013:INFO:Set up index.
2025-08-18 17:10:49,042:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:10:49,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:10:49,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:10:49,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:10:55,166:INFO:PyCaret ClassificationExperiment
2025-08-18 17:10:55,167:INFO:Logging name: clf-default-name
2025-08-18 17:10:55,167:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 17:10:55,167:INFO:version 3.3.2
2025-08-18 17:10:55,167:INFO:Initializing setup()
2025-08-18 17:10:55,167:INFO:self.USI: 5519
2025-08-18 17:10:55,167:INFO:self._variable_keys: {'y', 'fold_generator', '_ml_usecase', 'data', 'idx', 'exp_id', 'logging_param', 'fold_groups_param', 'memory', 'target_param', 'fold_shuffle_param', 'seed', 'html_param', 'X', 'X_test', 'gpu_param', 'y_train', 'y_test', 'pipeline', 'X_train', 'n_jobs_param', 'exp_name_log', '_available_plots', 'fix_imbalance', 'log_plots_param', 'gpu_n_jobs_param', 'USI', 'is_multiclass'}
2025-08-18 17:10:55,167:INFO:Checking environment
2025-08-18 17:10:55,167:INFO:python_version: 3.9.23
2025-08-18 17:10:55,167:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-18 17:10:55,167:INFO:machine: AMD64
2025-08-18 17:10:55,189:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-18 17:10:55,192:INFO:Memory: svmem(total=8458973184, available=2722734080, percent=67.8, used=5736239104, free=2722734080)
2025-08-18 17:10:55,192:INFO:Physical Core: 2
2025-08-18 17:10:55,192:INFO:Logical Core: 4
2025-08-18 17:10:55,192:INFO:Checking libraries
2025-08-18 17:10:55,192:INFO:System:
2025-08-18 17:10:55,192:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-18 17:10:55,192:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-18 17:10:55,192:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-18 17:10:55,192:INFO:PyCaret required dependencies:
2025-08-18 17:10:55,407:INFO:                 pip: 25.1
2025-08-18 17:10:55,407:INFO:          setuptools: 78.1.1
2025-08-18 17:10:55,407:INFO:             pycaret: 3.3.2
2025-08-18 17:10:55,407:INFO:             IPython: 8.18.1
2025-08-18 17:10:55,407:INFO:          ipywidgets: 8.1.7
2025-08-18 17:10:55,407:INFO:                tqdm: 4.67.1
2025-08-18 17:10:55,407:INFO:               numpy: 1.26.4
2025-08-18 17:10:55,407:INFO:              pandas: 2.1.4
2025-08-18 17:10:55,407:INFO:              jinja2: 3.1.6
2025-08-18 17:10:55,407:INFO:               scipy: 1.11.4
2025-08-18 17:10:55,408:INFO:              joblib: 1.5.1
2025-08-18 17:10:55,408:INFO:             sklearn: 1.4.2
2025-08-18 17:10:55,408:INFO:                pyod: 2.0.5
2025-08-18 17:10:55,408:INFO:            imblearn: 0.12.4
2025-08-18 17:10:55,408:INFO:   category_encoders: 2.6.4
2025-08-18 17:10:55,408:INFO:            lightgbm: 4.6.0
2025-08-18 17:10:55,408:INFO:               numba: 0.60.0
2025-08-18 17:10:55,408:INFO:            requests: 2.32.4
2025-08-18 17:10:55,408:INFO:          matplotlib: 3.7.5
2025-08-18 17:10:55,408:INFO:          scikitplot: 0.3.7
2025-08-18 17:10:55,408:INFO:         yellowbrick: 1.5
2025-08-18 17:10:55,408:INFO:              plotly: 5.24.1
2025-08-18 17:10:55,408:INFO:    plotly-resampler: Not installed
2025-08-18 17:10:55,408:INFO:             kaleido: 1.0.0
2025-08-18 17:10:55,408:INFO:           schemdraw: 0.15
2025-08-18 17:10:55,408:INFO:         statsmodels: 0.14.5
2025-08-18 17:10:55,408:INFO:              sktime: 0.26.0
2025-08-18 17:10:55,409:INFO:               tbats: 1.1.3
2025-08-18 17:10:55,409:INFO:            pmdarima: 2.0.4
2025-08-18 17:10:55,409:INFO:              psutil: 7.0.0
2025-08-18 17:10:55,409:INFO:          markupsafe: 3.0.2
2025-08-18 17:10:55,409:INFO:             pickle5: Not installed
2025-08-18 17:10:55,409:INFO:         cloudpickle: 3.1.1
2025-08-18 17:10:55,409:INFO:         deprecation: 2.1.0
2025-08-18 17:10:55,409:INFO:              xxhash: 3.5.0
2025-08-18 17:10:55,409:INFO:           wurlitzer: Not installed
2025-08-18 17:10:55,409:INFO:PyCaret optional dependencies:
2025-08-18 17:11:07,009:INFO:                shap: 0.44.1
2025-08-18 17:11:07,009:INFO:           interpret: 0.7.1
2025-08-18 17:11:07,009:INFO:                umap: 0.5.7
2025-08-18 17:11:07,009:INFO:     ydata_profiling: 4.16.1
2025-08-18 17:11:07,009:INFO:  explainerdashboard: 0.5.1
2025-08-18 17:11:07,009:INFO:             autoviz: Not installed
2025-08-18 17:11:07,009:INFO:           fairlearn: 0.7.0
2025-08-18 17:11:07,009:INFO:          deepchecks: Not installed
2025-08-18 17:11:07,009:INFO:             xgboost: Not installed
2025-08-18 17:11:07,009:INFO:            catboost: Not installed
2025-08-18 17:11:07,009:INFO:              kmodes: Not installed
2025-08-18 17:11:07,010:INFO:             mlxtend: Not installed
2025-08-18 17:11:07,010:INFO:       statsforecast: Not installed
2025-08-18 17:11:07,010:INFO:        tune_sklearn: Not installed
2025-08-18 17:11:07,010:INFO:                 ray: Not installed
2025-08-18 17:11:07,010:INFO:            hyperopt: Not installed
2025-08-18 17:11:07,010:INFO:              optuna: Not installed
2025-08-18 17:11:07,010:INFO:               skopt: Not installed
2025-08-18 17:11:07,010:INFO:              mlflow: Not installed
2025-08-18 17:11:07,010:INFO:              gradio: Not installed
2025-08-18 17:11:07,010:INFO:             fastapi: 0.116.1
2025-08-18 17:11:07,010:INFO:             uvicorn: 0.35.0
2025-08-18 17:11:07,010:INFO:              m2cgen: Not installed
2025-08-18 17:11:07,010:INFO:           evidently: Not installed
2025-08-18 17:11:07,010:INFO:               fugue: Not installed
2025-08-18 17:11:07,010:INFO:           streamlit: Not installed
2025-08-18 17:11:07,011:INFO:             prophet: Not installed
2025-08-18 17:11:07,011:INFO:None
2025-08-18 17:11:07,011:INFO:Set up data.
2025-08-18 17:11:07,143:INFO:Set up folding strategy.
2025-08-18 17:11:07,144:INFO:Set up train/test split.
2025-08-18 17:11:07,221:INFO:Set up index.
2025-08-18 17:11:07,222:INFO:Assigning column types.
2025-08-18 17:11:07,226:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 17:11:07,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 17:11:07,306:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:11:07,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,480:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 17:11:07,482:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:11:07,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,529:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 17:11:07,601:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:11:07,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:11:07,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,769:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 17:11:07,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:07,888:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:08,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:08,008:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:08,051:INFO:Preparing preprocessing pipeline...
2025-08-18 17:11:08,078:INFO:Set up label encoding.
2025-08-18 17:11:08,078:INFO:Set up simple imputation.
2025-08-18 17:11:08,078:INFO:Set up text embedding.
2025-08-18 17:11:08,078:INFO:Set up imbalanced handling.
2025-08-18 17:11:10,530:INFO:Finished creating preprocessing pipeline.
2025-08-18 17:11:10,543:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf'))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=123,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2025-08-18 17:11:10,543:INFO:Creating final display dataframe.
2025-08-18 17:11:34,561:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 2)
5           Transformed data shape              (7899, 7304)
6      Transformed train set shape              (6424, 7304)
7       Transformed test set shape              (1475, 7304)
8                    Text features                         1
9                       Preprocess                      True
10                 Imputation type                    simple
11              Numeric imputation                      mean
12          Categorical imputation                      mode
13  Text features embedding method                    tf-idf
14                   Fix imbalance                      True
15            Fix imbalance method                     SMOTE
16                  Fold Generator           StratifiedKFold
17                     Fold Number                         5
18                        CPU Jobs                        -1
19                         Use GPU                     False
20                  Log Experiment                     False
21                 Experiment Name          clf-default-name
22                             USI                      5519
2025-08-18 17:11:34,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:34,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:34,859:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:34,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:11:34,861:INFO:setup() successfully completed in 39.73s...............
2025-08-18 17:11:34,861:INFO:Initializing compare_models()
2025-08-18 17:11:34,862:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-18 17:11:34,862:INFO:Checking exceptions
2025-08-18 17:11:34,899:INFO:Preparing display monitor
2025-08-18 17:11:34,929:INFO:Initializing Logistic Regression
2025-08-18 17:11:34,930:INFO:Total runtime is 1.6645590464274088e-05 minutes
2025-08-18 17:11:34,930:INFO:SubProcess create_model() called ==================================
2025-08-18 17:11:34,931:INFO:Initializing create_model()
2025-08-18 17:11:34,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000218C4DD4790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:11:34,931:INFO:Checking exceptions
2025-08-18 17:11:34,931:INFO:Importing libraries
2025-08-18 17:11:34,931:INFO:Copying training dataset
2025-08-18 17:11:34,939:INFO:Defining folds
2025-08-18 17:11:34,939:INFO:Declaring metric variables
2025-08-18 17:11:34,939:INFO:Importing untrained model
2025-08-18 17:11:34,940:INFO:Logistic Regression Imported successfully
2025-08-18 17:11:34,940:INFO:Starting cross validation
2025-08-18 17:11:34,996:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:12:31,914:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:32,009:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:32,082:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:35,662:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:35,691:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:35,719:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:36,067:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:36,096:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:36,126:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:36,553:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:36,581:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:36,601:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:49,520:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:49,534:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:49,557:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:12:49,607:INFO:Calculating mean and std
2025-08-18 17:12:49,639:INFO:Creating metrics dataframe
2025-08-18 17:12:49,659:INFO:Uploading results into container
2025-08-18 17:12:49,660:INFO:Uploading model into container now
2025-08-18 17:12:49,668:INFO:_master_model_container: 1
2025-08-18 17:12:49,668:INFO:_display_container: 2
2025-08-18 17:12:49,671:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 17:12:49,672:INFO:create_model() successfully completed......................................
2025-08-18 17:12:50,005:INFO:SubProcess create_model() end ==================================
2025-08-18 17:12:50,006:INFO:Creating metrics dataframe
2025-08-18 17:12:50,018:INFO:Initializing SVM - Linear Kernel
2025-08-18 17:12:50,018:INFO:Total runtime is 1.2514900008837382 minutes
2025-08-18 17:12:50,019:INFO:SubProcess create_model() called ==================================
2025-08-18 17:12:50,020:INFO:Initializing create_model()
2025-08-18 17:12:50,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000218C4DD4790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:12:50,020:INFO:Checking exceptions
2025-08-18 17:12:50,020:INFO:Importing libraries
2025-08-18 17:12:50,020:INFO:Copying training dataset
2025-08-18 17:12:50,040:INFO:Defining folds
2025-08-18 17:12:50,041:INFO:Declaring metric variables
2025-08-18 17:12:50,041:INFO:Importing untrained model
2025-08-18 17:12:50,043:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:12:50,044:INFO:Starting cross validation
2025-08-18 17:12:50,154:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:13:27,541:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,567:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,593:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,600:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,621:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,628:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,651:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,672:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,695:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,784:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,809:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:27,827:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:39,065:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:39,081:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:39,096:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:13:39,132:INFO:Calculating mean and std
2025-08-18 17:13:39,135:INFO:Creating metrics dataframe
2025-08-18 17:13:39,169:INFO:Uploading results into container
2025-08-18 17:13:39,171:INFO:Uploading model into container now
2025-08-18 17:13:39,172:INFO:_master_model_container: 2
2025-08-18 17:13:39,172:INFO:_display_container: 2
2025-08-18 17:13:39,178:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:13:39,179:INFO:create_model() successfully completed......................................
2025-08-18 17:13:39,452:INFO:SubProcess create_model() end ==================================
2025-08-18 17:13:39,452:INFO:Creating metrics dataframe
2025-08-18 17:13:39,514:INFO:Initializing Random Forest Classifier
2025-08-18 17:13:39,515:INFO:Total runtime is 2.0764363765716554 minutes
2025-08-18 17:13:39,515:INFO:SubProcess create_model() called ==================================
2025-08-18 17:13:39,516:INFO:Initializing create_model()
2025-08-18 17:13:39,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000218C4DD4790>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:13:39,516:INFO:Checking exceptions
2025-08-18 17:13:39,516:INFO:Importing libraries
2025-08-18 17:13:39,516:INFO:Copying training dataset
2025-08-18 17:13:39,522:INFO:Defining folds
2025-08-18 17:13:39,523:INFO:Declaring metric variables
2025-08-18 17:13:39,523:INFO:Importing untrained model
2025-08-18 17:13:39,526:INFO:Random Forest Classifier Imported successfully
2025-08-18 17:13:39,528:INFO:Starting cross validation
2025-08-18 17:13:39,589:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:14:24,914:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:24,928:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:24,939:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:24,971:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,000:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,014:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,014:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,030:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,063:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,066:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:25,082:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:35,933:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:35,945:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:35,961:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:14:35,992:INFO:Calculating mean and std
2025-08-18 17:14:35,994:INFO:Creating metrics dataframe
2025-08-18 17:14:36,007:INFO:Uploading results into container
2025-08-18 17:14:36,009:INFO:Uploading model into container now
2025-08-18 17:14:36,010:INFO:_master_model_container: 3
2025-08-18 17:14:36,010:INFO:_display_container: 2
2025-08-18 17:14:36,011:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-18 17:14:36,011:INFO:create_model() successfully completed......................................
2025-08-18 17:14:36,200:INFO:SubProcess create_model() end ==================================
2025-08-18 17:14:36,200:INFO:Creating metrics dataframe
2025-08-18 17:14:36,243:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-18 17:14:36,251:INFO:Initializing create_model()
2025-08-18 17:14:36,251:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:14:36,252:INFO:Checking exceptions
2025-08-18 17:14:36,275:INFO:Importing libraries
2025-08-18 17:14:36,276:INFO:Copying training dataset
2025-08-18 17:14:36,284:INFO:Defining folds
2025-08-18 17:14:36,284:INFO:Declaring metric variables
2025-08-18 17:14:36,284:INFO:Importing untrained model
2025-08-18 17:14:36,284:INFO:Declaring custom model
2025-08-18 17:14:36,285:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:14:36,349:INFO:Cross validation set to False
2025-08-18 17:14:36,349:INFO:Fitting Model
2025-08-18 17:14:48,010:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:14:48,010:INFO:create_model() successfully completed......................................
2025-08-18 17:14:48,161:INFO:_master_model_container: 3
2025-08-18 17:14:48,161:INFO:_display_container: 2
2025-08-18 17:14:48,162:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:14:48,162:INFO:compare_models() successfully completed......................................
2025-08-18 17:14:48,164:INFO:Initializing tune_model()
2025-08-18 17:14:48,164:INFO:tune_model(estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>)
2025-08-18 17:14:48,164:INFO:Checking exceptions
2025-08-18 17:14:48,194:INFO:Copying training dataset
2025-08-18 17:14:48,197:INFO:Checking base model
2025-08-18 17:14:48,198:INFO:Base model : SVM - Linear Kernel
2025-08-18 17:14:48,199:INFO:Declaring metric variables
2025-08-18 17:14:48,199:INFO:Defining Hyperparameters
2025-08-18 17:14:48,382:INFO:Tuning with n_jobs=-1
2025-08-18 17:14:48,382:INFO:Initializing RandomizedSearchCV
2025-08-18 17:15:41,409:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:15:41,672:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:15:42,186:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:15:44,109:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:16,507:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:16,738:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:18,851:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:29,703:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:34,873:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:38,387:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:44,143:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:44,352:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:45,238:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:50,206:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:56,650:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:57,270:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:16:57,891:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:03,765:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:09,321:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:10,093:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:11,704:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:17,828:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:22,864:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:23,293:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:24,830:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:29,743:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:35,672:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:36,149:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:37,186:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:17:42,986:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:18:01,431:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:18:01,608:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:18:03,477:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:18:07,415:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:18:27,296:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:02,934:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:03,817:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:14,905:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:23,155:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:28,587:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:33,374:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:41,415:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:45,861:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:49,628:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:50,671:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:54,546:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:58,722:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:19:59,550:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:02,781:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:03,353:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:03,478:INFO:best_params: {'actual_estimator__penalty': 'elasticnet', 'actual_estimator__learning_rate': 'adaptive', 'actual_estimator__l1_ratio': 0.7700000001, 'actual_estimator__fit_intercept': True, 'actual_estimator__eta0': 0.5, 'actual_estimator__alpha': 1e-07}
2025-08-18 17:20:03,496:INFO:Hyperparameter search completed
2025-08-18 17:20:03,496:INFO:SubProcess create_model() called ==================================
2025-08-18 17:20:03,509:INFO:Initializing create_model()
2025-08-18 17:20:03,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021880FE9BB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'elasticnet', 'learning_rate': 'adaptive', 'l1_ratio': 0.7700000001, 'fit_intercept': True, 'eta0': 0.5, 'alpha': 1e-07})
2025-08-18 17:20:03,509:INFO:Checking exceptions
2025-08-18 17:20:03,511:INFO:Importing libraries
2025-08-18 17:20:03,518:INFO:Copying training dataset
2025-08-18 17:20:03,556:INFO:Defining folds
2025-08-18 17:20:03,557:INFO:Declaring metric variables
2025-08-18 17:20:03,559:INFO:Importing untrained model
2025-08-18 17:20:03,559:INFO:Declaring custom model
2025-08-18 17:20:03,576:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:20:03,578:INFO:Starting cross validation
2025-08-18 17:20:03,639:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:20:46,034:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,058:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,072:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,378:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,400:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,414:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,802:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,818:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:46,833:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:47,979:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:47,989:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:20:48,005:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:21:12,046:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:21:12,053:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:21:12,060:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:21:12,089:INFO:Calculating mean and std
2025-08-18 17:21:12,091:INFO:Creating metrics dataframe
2025-08-18 17:21:12,112:INFO:Finalizing model
2025-08-18 17:21:46,855:INFO:Uploading results into container
2025-08-18 17:21:46,856:INFO:Uploading model into container now
2025-08-18 17:21:46,857:INFO:_master_model_container: 4
2025-08-18 17:21:46,857:INFO:_display_container: 3
2025-08-18 17:21:46,858:INFO:SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:21:46,859:INFO:create_model() successfully completed......................................
2025-08-18 17:21:46,965:INFO:SubProcess create_model() end ==================================
2025-08-18 17:21:46,965:INFO:choose_better activated
2025-08-18 17:21:46,966:INFO:SubProcess create_model() called ==================================
2025-08-18 17:21:46,966:INFO:Initializing create_model()
2025-08-18 17:21:46,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:21:46,967:INFO:Checking exceptions
2025-08-18 17:21:46,968:INFO:Importing libraries
2025-08-18 17:21:46,968:INFO:Copying training dataset
2025-08-18 17:21:46,972:INFO:Defining folds
2025-08-18 17:21:46,972:INFO:Declaring metric variables
2025-08-18 17:21:46,973:INFO:Importing untrained model
2025-08-18 17:21:46,973:INFO:Declaring custom model
2025-08-18 17:21:46,974:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:21:46,974:INFO:Starting cross validation
2025-08-18 17:21:47,002:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:21:59,913:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:21:59,913:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:21:59,913:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:00,139:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:00,139:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:00,139:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:00,153:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:00,153:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:04,864:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:04,872:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:04,879:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:22:04,906:INFO:Calculating mean and std
2025-08-18 17:22:04,907:INFO:Creating metrics dataframe
2025-08-18 17:22:04,910:INFO:Finalizing model
2025-08-18 17:22:10,956:INFO:Uploading results into container
2025-08-18 17:22:10,957:INFO:Uploading model into container now
2025-08-18 17:22:10,957:INFO:_master_model_container: 5
2025-08-18 17:22:10,957:INFO:_display_container: 4
2025-08-18 17:22:10,958:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:22:10,958:INFO:create_model() successfully completed......................................
2025-08-18 17:22:11,070:INFO:SubProcess create_model() end ==================================
2025-08-18 17:22:11,071:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) result for F1 is 0.9448
2025-08-18 17:22:11,072:INFO:SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False) result for F1 is 0.9444
2025-08-18 17:22:11,073:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) is best model
2025-08-18 17:22:11,073:INFO:choose_better completed
2025-08-18 17:22:11,073:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-08-18 17:22:11,128:INFO:_master_model_container: 5
2025-08-18 17:22:11,128:INFO:_display_container: 3
2025-08-18 17:22:11,129:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:22:11,129:INFO:tune_model() successfully completed......................................
2025-08-18 17:22:11,227:INFO:Initializing finalize_model()
2025-08-18 17:22:11,227:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 17:22:11,228:INFO:Finalizing SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:22:11,231:INFO:Initializing create_model()
2025-08-18 17:22:11,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000218B23999A0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:22:11,231:INFO:Checking exceptions
2025-08-18 17:22:11,232:INFO:Importing libraries
2025-08-18 17:22:11,232:INFO:Copying training dataset
2025-08-18 17:22:11,232:INFO:Defining folds
2025-08-18 17:22:11,232:INFO:Declaring metric variables
2025-08-18 17:22:11,232:INFO:Importing untrained model
2025-08-18 17:22:11,232:INFO:Declaring custom model
2025-08-18 17:22:11,233:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:22:11,261:INFO:Cross validation set to False
2025-08-18 17:22:11,261:INFO:Fitting Model
2025-08-18 17:36:19,168:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:36:19,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:36:19,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:36:19,181:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 17:36:28,474:INFO:PyCaret ClassificationExperiment
2025-08-18 17:36:28,474:INFO:Logging name: clf-default-name
2025-08-18 17:36:28,474:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-08-18 17:36:28,474:INFO:version 3.3.2
2025-08-18 17:36:28,474:INFO:Initializing setup()
2025-08-18 17:36:28,474:INFO:self.USI: ab07
2025-08-18 17:36:28,475:INFO:self._variable_keys: {'idx', 'gpu_n_jobs_param', 'seed', 'exp_id', 'X_train', 'fold_generator', 'X_test', 'y_train', 'fix_imbalance', 'log_plots_param', 'X', 'logging_param', 'is_multiclass', 'pipeline', 'html_param', 'fold_shuffle_param', 'y', '_available_plots', 'memory', 'fold_groups_param', 'data', 'USI', 'gpu_param', 'target_param', 'y_test', 'n_jobs_param', '_ml_usecase', 'exp_name_log'}
2025-08-18 17:36:28,475:INFO:Checking environment
2025-08-18 17:36:28,475:INFO:python_version: 3.9.23
2025-08-18 17:36:28,475:INFO:python_build: ('main', 'Jun  5 2025 13:25:08')
2025-08-18 17:36:28,475:INFO:machine: AMD64
2025-08-18 17:36:28,537:INFO:platform: Windows-10-10.0.19045-SP0
2025-08-18 17:36:28,546:INFO:Memory: svmem(total=8458973184, available=1226399744, percent=85.5, used=7232573440, free=1226399744)
2025-08-18 17:36:28,546:INFO:Physical Core: 2
2025-08-18 17:36:28,547:INFO:Logical Core: 4
2025-08-18 17:36:28,547:INFO:Checking libraries
2025-08-18 17:36:28,547:INFO:System:
2025-08-18 17:36:28,547:INFO:    python: 3.9.23 (main, Jun  5 2025, 13:25:08) [MSC v.1929 64 bit (AMD64)]
2025-08-18 17:36:28,547:INFO:executable: J:\Projects\python\myenv2\python.exe
2025-08-18 17:36:28,547:INFO:   machine: Windows-10-10.0.19045-SP0
2025-08-18 17:36:28,547:INFO:PyCaret required dependencies:
2025-08-18 17:36:28,871:INFO:                 pip: 25.1
2025-08-18 17:36:28,871:INFO:          setuptools: 78.1.1
2025-08-18 17:36:28,871:INFO:             pycaret: 3.3.2
2025-08-18 17:36:28,872:INFO:             IPython: 8.18.1
2025-08-18 17:36:28,872:INFO:          ipywidgets: 8.1.7
2025-08-18 17:36:28,872:INFO:                tqdm: 4.67.1
2025-08-18 17:36:28,872:INFO:               numpy: 1.26.4
2025-08-18 17:36:28,872:INFO:              pandas: 2.1.4
2025-08-18 17:36:28,872:INFO:              jinja2: 3.1.6
2025-08-18 17:36:28,872:INFO:               scipy: 1.11.4
2025-08-18 17:36:28,873:INFO:              joblib: 1.5.1
2025-08-18 17:36:28,873:INFO:             sklearn: 1.4.2
2025-08-18 17:36:28,873:INFO:                pyod: 2.0.5
2025-08-18 17:36:28,873:INFO:            imblearn: 0.12.4
2025-08-18 17:36:28,873:INFO:   category_encoders: 2.6.4
2025-08-18 17:36:28,873:INFO:            lightgbm: 4.6.0
2025-08-18 17:36:28,873:INFO:               numba: 0.60.0
2025-08-18 17:36:28,874:INFO:            requests: 2.32.4
2025-08-18 17:36:28,874:INFO:          matplotlib: 3.7.5
2025-08-18 17:36:28,874:INFO:          scikitplot: 0.3.7
2025-08-18 17:36:28,874:INFO:         yellowbrick: 1.5
2025-08-18 17:36:28,874:INFO:              plotly: 5.24.1
2025-08-18 17:36:28,874:INFO:    plotly-resampler: Not installed
2025-08-18 17:36:28,874:INFO:             kaleido: 1.0.0
2025-08-18 17:36:28,874:INFO:           schemdraw: 0.15
2025-08-18 17:36:28,874:INFO:         statsmodels: 0.14.5
2025-08-18 17:36:28,874:INFO:              sktime: 0.26.0
2025-08-18 17:36:28,874:INFO:               tbats: 1.1.3
2025-08-18 17:36:28,875:INFO:            pmdarima: 2.0.4
2025-08-18 17:36:28,875:INFO:              psutil: 7.0.0
2025-08-18 17:36:28,875:INFO:          markupsafe: 3.0.2
2025-08-18 17:36:28,875:INFO:             pickle5: Not installed
2025-08-18 17:36:28,875:INFO:         cloudpickle: 3.1.1
2025-08-18 17:36:28,875:INFO:         deprecation: 2.1.0
2025-08-18 17:36:28,875:INFO:              xxhash: 3.5.0
2025-08-18 17:36:28,875:INFO:           wurlitzer: Not installed
2025-08-18 17:36:28,875:INFO:PyCaret optional dependencies:
2025-08-18 17:36:42,420:INFO:                shap: 0.44.1
2025-08-18 17:36:42,420:INFO:           interpret: 0.7.1
2025-08-18 17:36:42,420:INFO:                umap: 0.5.7
2025-08-18 17:36:42,421:INFO:     ydata_profiling: 4.16.1
2025-08-18 17:36:42,421:INFO:  explainerdashboard: 0.5.1
2025-08-18 17:36:42,421:INFO:             autoviz: Not installed
2025-08-18 17:36:42,421:INFO:           fairlearn: 0.7.0
2025-08-18 17:36:42,421:INFO:          deepchecks: Not installed
2025-08-18 17:36:42,421:INFO:             xgboost: Not installed
2025-08-18 17:36:42,421:INFO:            catboost: Not installed
2025-08-18 17:36:42,421:INFO:              kmodes: Not installed
2025-08-18 17:36:42,421:INFO:             mlxtend: Not installed
2025-08-18 17:36:42,421:INFO:       statsforecast: Not installed
2025-08-18 17:36:42,421:INFO:        tune_sklearn: Not installed
2025-08-18 17:36:42,421:INFO:                 ray: Not installed
2025-08-18 17:36:42,421:INFO:            hyperopt: Not installed
2025-08-18 17:36:42,421:INFO:              optuna: Not installed
2025-08-18 17:36:42,422:INFO:               skopt: Not installed
2025-08-18 17:36:42,422:INFO:              mlflow: Not installed
2025-08-18 17:36:42,422:INFO:              gradio: Not installed
2025-08-18 17:36:42,422:INFO:             fastapi: 0.116.1
2025-08-18 17:36:42,422:INFO:             uvicorn: 0.35.0
2025-08-18 17:36:42,422:INFO:              m2cgen: Not installed
2025-08-18 17:36:42,422:INFO:           evidently: Not installed
2025-08-18 17:36:42,422:INFO:               fugue: Not installed
2025-08-18 17:36:42,422:INFO:           streamlit: Not installed
2025-08-18 17:36:42,422:INFO:             prophet: Not installed
2025-08-18 17:36:42,422:INFO:None
2025-08-18 17:36:42,422:INFO:Set up data.
2025-08-18 17:36:42,681:INFO:Set up folding strategy.
2025-08-18 17:36:42,682:INFO:Set up train/test split.
2025-08-18 17:36:42,820:INFO:Set up index.
2025-08-18 17:36:42,820:INFO:Assigning column types.
2025-08-18 17:36:42,833:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-08-18 17:36:42,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 17:36:42,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:36:43,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-08-18 17:36:43,107:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:36:43,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,160:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-08-18 17:36:43,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:36:43,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,419:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-08-18 17:36:43,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,476:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-08-18 17:36:43,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:43,816:INFO:Preparing preprocessing pipeline...
2025-08-18 17:36:43,843:INFO:Set up label encoding.
2025-08-18 17:36:43,843:INFO:Set up simple imputation.
2025-08-18 17:36:43,843:INFO:Set up text embedding.
2025-08-18 17:36:44,592:INFO:Finished creating preprocessing pipeline.
2025-08-18 17:36:44,601:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf')))],
         verbose=False)
2025-08-18 17:36:44,601:INFO:Creating final display dataframe.
2025-08-18 17:36:48,846:INFO:Setup _display_container:                        Description                     Value
0                       Session id                       123
1                           Target                 sentiment
2                      Target type                    Binary
3                   Target mapping  negative: 0, positive: 1
4              Original data shape                 (4914, 2)
5           Transformed data shape              (4914, 7304)
6      Transformed train set shape              (3439, 7304)
7       Transformed test set shape              (1475, 7304)
8                    Text features                         1
9                       Preprocess                      True
10                 Imputation type                    simple
11              Numeric imputation                      mean
12          Categorical imputation                      mode
13  Text features embedding method                    tf-idf
14                  Fold Generator           StratifiedKFold
15                     Fold Number                         5
16                        CPU Jobs                        -1
17                         Use GPU                     False
18                  Log Experiment                     False
19                 Experiment Name          clf-default-name
20                             USI                      ab07
2025-08-18 17:36:49,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:49,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:49,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:49,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-08-18 17:36:49,228:INFO:setup() successfully completed in 20.82s...............
2025-08-18 17:36:49,262:INFO:Initializing compare_models()
2025-08-18 17:36:49,263:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, include=['lr', 'svm', 'rf'], fold=None, round=4, cross_validation=True, sort=F1, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, 'include': ['lr', 'svm', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'F1', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-08-18 17:36:49,263:INFO:Checking exceptions
2025-08-18 17:36:49,308:INFO:Preparing display monitor
2025-08-18 17:36:49,375:INFO:Initializing Logistic Regression
2025-08-18 17:36:49,375:INFO:Total runtime is 0.0 minutes
2025-08-18 17:36:49,375:INFO:SubProcess create_model() called ==================================
2025-08-18 17:36:49,376:INFO:Initializing create_model()
2025-08-18 17:36:49,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A51341F730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:36:49,376:INFO:Checking exceptions
2025-08-18 17:36:49,376:INFO:Importing libraries
2025-08-18 17:36:49,376:INFO:Copying training dataset
2025-08-18 17:36:49,381:INFO:Defining folds
2025-08-18 17:36:49,381:INFO:Declaring metric variables
2025-08-18 17:36:49,381:INFO:Importing untrained model
2025-08-18 17:36:49,382:INFO:Logistic Regression Imported successfully
2025-08-18 17:36:49,382:INFO:Starting cross validation
2025-08-18 17:36:49,409:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:37:20,433:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,433:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,433:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,474:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,474:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,474:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,475:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,490:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,490:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,491:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:20,491:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:23,689:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:23,712:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:23,734:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:23,779:INFO:Calculating mean and std
2025-08-18 17:37:23,813:INFO:Creating metrics dataframe
2025-08-18 17:37:23,836:INFO:Uploading results into container
2025-08-18 17:37:23,838:INFO:Uploading model into container now
2025-08-18 17:37:23,841:INFO:_master_model_container: 1
2025-08-18 17:37:23,841:INFO:_display_container: 2
2025-08-18 17:37:23,843:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-08-18 17:37:23,843:INFO:create_model() successfully completed......................................
2025-08-18 17:37:24,043:INFO:SubProcess create_model() end ==================================
2025-08-18 17:37:24,043:INFO:Creating metrics dataframe
2025-08-18 17:37:24,046:INFO:Initializing SVM - Linear Kernel
2025-08-18 17:37:24,047:INFO:Total runtime is 0.5778585314750672 minutes
2025-08-18 17:37:24,047:INFO:SubProcess create_model() called ==================================
2025-08-18 17:37:24,047:INFO:Initializing create_model()
2025-08-18 17:37:24,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A51341F730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:37:24,047:INFO:Checking exceptions
2025-08-18 17:37:24,047:INFO:Importing libraries
2025-08-18 17:37:24,048:INFO:Copying training dataset
2025-08-18 17:37:24,052:INFO:Defining folds
2025-08-18 17:37:24,052:INFO:Declaring metric variables
2025-08-18 17:37:24,053:INFO:Importing untrained model
2025-08-18 17:37:24,054:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:37:24,054:INFO:Starting cross validation
2025-08-18 17:37:24,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:37:28,632:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,637:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,656:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,660:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,682:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,689:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,771:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,792:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,813:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,873:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,898:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:28,921:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:31,281:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:31,291:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:31,300:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:31,326:INFO:Calculating mean and std
2025-08-18 17:37:31,328:INFO:Creating metrics dataframe
2025-08-18 17:37:31,331:INFO:Uploading results into container
2025-08-18 17:37:31,332:INFO:Uploading model into container now
2025-08-18 17:37:31,332:INFO:_master_model_container: 2
2025-08-18 17:37:31,332:INFO:_display_container: 2
2025-08-18 17:37:31,333:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:37:31,333:INFO:create_model() successfully completed......................................
2025-08-18 17:37:31,454:INFO:SubProcess create_model() end ==================================
2025-08-18 17:37:31,454:INFO:Creating metrics dataframe
2025-08-18 17:37:31,500:INFO:Initializing Random Forest Classifier
2025-08-18 17:37:31,500:INFO:Total runtime is 0.7020904302597046 minutes
2025-08-18 17:37:31,502:INFO:SubProcess create_model() called ==================================
2025-08-18 17:37:31,503:INFO:Initializing create_model()
2025-08-18 17:37:31,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A51341F730>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:37:31,503:INFO:Checking exceptions
2025-08-18 17:37:31,504:INFO:Importing libraries
2025-08-18 17:37:31,504:INFO:Copying training dataset
2025-08-18 17:37:31,516:INFO:Defining folds
2025-08-18 17:37:31,516:INFO:Declaring metric variables
2025-08-18 17:37:31,517:INFO:Importing untrained model
2025-08-18 17:37:31,518:INFO:Random Forest Classifier Imported successfully
2025-08-18 17:37:31,518:INFO:Starting cross validation
2025-08-18 17:37:31,552:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:37:43,851:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,882:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,896:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,904:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,906:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-18 17:37:43,917:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,919:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,922:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,934:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-18 17:37:43,937:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,942:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,958:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,963:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:43,973:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-18 17:37:43,985:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:48,703:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:48,728:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:48,746:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-08-18 17:37:48,767:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:37:48,816:INFO:Calculating mean and std
2025-08-18 17:37:48,818:INFO:Creating metrics dataframe
2025-08-18 17:37:48,823:INFO:Uploading results into container
2025-08-18 17:37:48,824:INFO:Uploading model into container now
2025-08-18 17:37:48,825:INFO:_master_model_container: 3
2025-08-18 17:37:48,825:INFO:_display_container: 2
2025-08-18 17:37:48,826:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-08-18 17:37:48,826:INFO:create_model() successfully completed......................................
2025-08-18 17:37:48,949:INFO:SubProcess create_model() end ==================================
2025-08-18 17:37:48,949:INFO:Creating metrics dataframe
2025-08-18 17:37:48,954:WARNING:J:\Projects\python\myenv2\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.

2025-08-18 17:37:48,957:INFO:Initializing create_model()
2025-08-18 17:37:48,957:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:37:48,957:INFO:Checking exceptions
2025-08-18 17:37:48,959:INFO:Importing libraries
2025-08-18 17:37:48,959:INFO:Copying training dataset
2025-08-18 17:37:48,966:INFO:Defining folds
2025-08-18 17:37:48,967:INFO:Declaring metric variables
2025-08-18 17:37:48,967:INFO:Importing untrained model
2025-08-18 17:37:48,967:INFO:Declaring custom model
2025-08-18 17:37:48,969:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:37:48,996:INFO:Cross validation set to False
2025-08-18 17:37:48,997:INFO:Fitting Model
2025-08-18 17:37:52,368:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:37:52,368:INFO:create_model() successfully completed......................................
2025-08-18 17:37:52,570:INFO:_master_model_container: 3
2025-08-18 17:37:52,570:INFO:_display_container: 2
2025-08-18 17:37:52,571:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:37:52,572:INFO:compare_models() successfully completed......................................
2025-08-18 17:37:52,574:INFO:Initializing tune_model()
2025-08-18 17:37:52,574:INFO:tune_model(estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>)
2025-08-18 17:37:52,575:INFO:Checking exceptions
2025-08-18 17:37:52,579:INFO:Copying training dataset
2025-08-18 17:37:52,588:INFO:Checking base model
2025-08-18 17:37:52,588:INFO:Base model : SVM - Linear Kernel
2025-08-18 17:37:52,589:INFO:Declaring metric variables
2025-08-18 17:37:52,589:INFO:Defining Hyperparameters
2025-08-18 17:37:52,785:INFO:Tuning with n_jobs=-1
2025-08-18 17:37:52,785:INFO:Initializing RandomizedSearchCV
2025-08-18 17:38:28,828:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:29,085:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:29,170:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:30,362:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:53,356:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:53,461:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:55,086:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:38:58,404:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:01,047:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:03,951:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:06,346:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:06,359:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:06,478:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:06,528:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:09,611:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:09,676:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:09,699:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:09,738:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:12,802:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:13,158:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:13,669:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:13,711:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:16,386:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:16,483:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:16,834:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:17,495:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:21,707:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:21,921:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:22,485:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:23,483:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:43,819:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:44,045:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:44,555:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:45,119:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:48,314:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:49,026:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:49,650:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:54,877:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:39:56,045:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:04,166:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:06,122:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:11,460:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:12,979:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:17,394:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:18,144:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:18,492:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:19,209:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:22,237:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:23,101:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:23,675:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:40:23,787:INFO:best_params: {'actual_estimator__penalty': 'elasticnet', 'actual_estimator__learning_rate': 'adaptive', 'actual_estimator__l1_ratio': 0.7700000001, 'actual_estimator__fit_intercept': True, 'actual_estimator__eta0': 0.5, 'actual_estimator__alpha': 1e-07}
2025-08-18 17:40:23,797:INFO:Hyperparameter search completed
2025-08-18 17:40:23,798:INFO:SubProcess create_model() called ==================================
2025-08-18 17:40:23,803:INFO:Initializing create_model()
2025-08-18 17:40:23,804:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A513483610>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'penalty': 'elasticnet', 'learning_rate': 'adaptive', 'l1_ratio': 0.7700000001, 'fit_intercept': True, 'eta0': 0.5, 'alpha': 1e-07})
2025-08-18 17:40:23,805:INFO:Checking exceptions
2025-08-18 17:40:23,806:INFO:Importing libraries
2025-08-18 17:40:23,806:INFO:Copying training dataset
2025-08-18 17:40:23,911:INFO:Defining folds
2025-08-18 17:40:23,912:INFO:Declaring metric variables
2025-08-18 17:40:23,915:INFO:Importing untrained model
2025-08-18 17:40:23,921:INFO:Declaring custom model
2025-08-18 17:40:23,929:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:40:23,931:INFO:Starting cross validation
2025-08-18 17:40:23,977:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:41:06,162:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,190:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,210:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,331:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,353:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,375:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,628:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,671:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:06,702:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:08,723:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:08,783:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:08,813:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:26,847:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:26,856:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:26,865:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:26,922:INFO:Calculating mean and std
2025-08-18 17:41:26,923:INFO:Creating metrics dataframe
2025-08-18 17:41:26,934:INFO:Finalizing model
2025-08-18 17:41:52,431:INFO:Uploading results into container
2025-08-18 17:41:52,432:INFO:Uploading model into container now
2025-08-18 17:41:52,434:INFO:_master_model_container: 4
2025-08-18 17:41:52,434:INFO:_display_container: 3
2025-08-18 17:41:52,435:INFO:SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:41:52,435:INFO:create_model() successfully completed......................................
2025-08-18 17:41:53,651:INFO:SubProcess create_model() end ==================================
2025-08-18 17:41:53,651:INFO:choose_better activated
2025-08-18 17:41:53,652:INFO:SubProcess create_model() called ==================================
2025-08-18 17:41:53,653:INFO:Initializing create_model()
2025-08-18 17:41:53,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:41:53,653:INFO:Checking exceptions
2025-08-18 17:41:53,655:INFO:Importing libraries
2025-08-18 17:41:53,656:INFO:Copying training dataset
2025-08-18 17:41:53,663:INFO:Defining folds
2025-08-18 17:41:53,664:INFO:Declaring metric variables
2025-08-18 17:41:53,664:INFO:Importing untrained model
2025-08-18 17:41:53,676:INFO:Declaring custom model
2025-08-18 17:41:53,678:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:41:53,679:INFO:Starting cross validation
2025-08-18 17:41:53,700:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2025-08-18 17:41:58,535:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,545:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,550:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,561:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,572:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,577:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,660:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,677:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,693:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,756:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,772:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:41:58,788:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:42:01,926:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:42:01,936:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:42:01,945:WARNING:J:\Projects\python\myenv2\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'positive') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-08-18 17:42:01,980:INFO:Calculating mean and std
2025-08-18 17:42:01,981:INFO:Creating metrics dataframe
2025-08-18 17:42:01,984:INFO:Finalizing model
2025-08-18 17:42:04,645:INFO:Uploading results into container
2025-08-18 17:42:04,646:INFO:Uploading model into container now
2025-08-18 17:42:04,647:INFO:_master_model_container: 5
2025-08-18 17:42:04,647:INFO:_display_container: 4
2025-08-18 17:42:04,650:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:42:04,650:INFO:create_model() successfully completed......................................
2025-08-18 17:42:04,812:INFO:SubProcess create_model() end ==================================
2025-08-18 17:42:04,813:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) result for F1 is 0.9411
2025-08-18 17:42:04,816:INFO:SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False) result for F1 is 0.9422
2025-08-18 17:42:04,817:INFO:SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False) is best model
2025-08-18 17:42:04,818:INFO:choose_better completed
2025-08-18 17:42:04,994:INFO:_master_model_container: 5
2025-08-18 17:42:04,994:INFO:_display_container: 3
2025-08-18 17:42:04,995:INFO:SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:42:04,995:INFO:tune_model() successfully completed......................................
2025-08-18 17:42:05,219:INFO:Initializing finalize_model()
2025-08-18 17:42:05,219:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-08-18 17:42:05,221:INFO:Finalizing SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False)
2025-08-18 17:42:05,228:INFO:Initializing create_model()
2025-08-18 17:42:05,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A57E46A940>, estimator=SGDClassifier(alpha=1e-07, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.5, fit_intercept=True,
              l1_ratio=0.7700000001, learning_rate='adaptive', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1,
              penalty='elasticnet', power_t=0.5, random_state=123, shuffle=True,
              tol=0.001, validation_fraction=0.1, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-08-18 17:42:05,229:INFO:Checking exceptions
2025-08-18 17:42:05,231:INFO:Importing libraries
2025-08-18 17:42:05,231:INFO:Copying training dataset
2025-08-18 17:42:05,232:INFO:Defining folds
2025-08-18 17:42:05,232:INFO:Declaring metric variables
2025-08-18 17:42:05,233:INFO:Importing untrained model
2025-08-18 17:42:05,234:INFO:Declaring custom model
2025-08-18 17:42:05,237:INFO:SVM - Linear Kernel Imported successfully
2025-08-18 17:42:05,259:INFO:Cross validation set to False
2025-08-18 17:42:05,259:INFO:Fitting Model
2025-08-18 17:42:59,286:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 SGDClassifier(alpha=1e-07, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.5,
                               fit_intercept=True, l1_ratio=0.7700000001,
                               learning_rate='adaptive', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=123, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)
2025-08-18 17:42:59,286:INFO:create_model() successfully completed......................................
2025-08-18 17:42:59,406:INFO:_master_model_container: 5
2025-08-18 17:42:59,407:INFO:_display_container: 3
2025-08-18 17:42:59,415:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 SGDClassifier(alpha=1e-07, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.5,
                               fit_intercept=True, l1_ratio=0.7700000001,
                               learning_rate='adaptive', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=123, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)
2025-08-18 17:42:59,415:INFO:finalize_model() successfully completed......................................
2025-08-18 17:42:59,622:INFO:Initializing save_model()
2025-08-18 17:42:59,623:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 SGDClassifier(alpha=1e-07, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.5,
                               fit_intercept=True, l1_ratio=0.7700000001,
                               learning_rate='adaptive', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=123, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False), model_name=sentiment_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\AR\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              mis...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(exclude=None, include=['reviewText'],
                                    transformer=EmbedTextFeatures(kwargs=None,
                                                                  method='tf-idf')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-08-18 17:42:59,624:INFO:Adding model into prep_pipe
2025-08-18 17:42:59,626:WARNING:Only Model saved as it was a pipeline.
2025-08-18 17:42:59,919:INFO:sentiment_model.pkl saved in current working directory
2025-08-18 17:42:59,953:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('...
                 SGDClassifier(alpha=1e-07, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.5,
                               fit_intercept=True, l1_ratio=0.7700000001,
                               learning_rate='adaptive', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='elasticnet', power_t=0.5,
                               random_state=123, shuffle=True, tol=0.001,
                               validation_fraction=0.1, verbose=0,
                               warm_start=False))],
         verbose=False)
2025-08-18 17:42:59,954:INFO:save_model() successfully completed......................................
2025-08-18 23:48:52,100:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:48:52,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:48:52,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:48:52,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:48:58,824:INFO:Initializing load_model()
2025-08-18 23:48:58,824:INFO:load_model(model_name=sentiment_model, platform=None, authentication=None, verbose=True)
2025-08-18 23:48:59,265:INFO:Initializing predict_model()
2025-08-18 23:48:59,282:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002834522B5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(include=['reviewText'],
                                    transformer=EmbedTextFeatures())),
                ('actual_estimator',
                 SGDClassifier(alpha=1e-07, eta0=0.5, l1_ratio=0.7700000001,
                               learning_rate='adaptive', n_jobs=-1,
                               penalty='elasticnet', random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000028344A5F160>)
2025-08-18 23:48:59,282:INFO:Checking exceptions
2025-08-18 23:48:59,282:INFO:Preloading libraries
2025-08-18 23:48:59,304:INFO:Set up data.
2025-08-18 23:48:59,372:INFO:Set up index.
2025-08-18 23:50:21,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:50:21,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:50:21,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:50:21,035:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-18 23:50:22,573:INFO:Initializing load_model()
2025-08-18 23:50:22,573:INFO:load_model(model_name=sentiment_model, platform=None, authentication=None, verbose=True)
2025-08-18 23:50:22,725:INFO:Initializing predict_model()
2025-08-18 23:50:22,725:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001D08AFCB5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(include=['reviewText'],
                                    transformer=EmbedTextFeatures())),
                ('actual_estimator',
                 SGDClassifier(alpha=1e-07, eta0=0.5, l1_ratio=0.7700000001,
                               learning_rate='adaptive', n_jobs=-1,
                               penalty='elasticnet', random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001D08A7FF160>)
2025-08-18 23:50:22,725:INFO:Checking exceptions
2025-08-18 23:50:22,725:INFO:Preloading libraries
2025-08-18 23:50:22,726:INFO:Set up data.
2025-08-18 23:50:22,729:INFO:Set up index.
2025-08-19 12:19:00,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 12:19:00,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 12:19:00,630:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 12:19:00,646:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-08-19 12:19:02,554:INFO:Initializing load_model()
2025-08-19 12:19:02,554:INFO:load_model(model_name=sentiment_model, platform=None, authentication=None, verbose=True)
2025-08-19 12:19:03,063:INFO:Initializing predict_model()
2025-08-19 12:19:03,063:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001ECC615B5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('text_embedding',
                 TransformerWrapper(include=['reviewText'],
                                    transformer=EmbedTextFeatures())),
                ('actual_estimator',
                 SGDClassifier(alpha=1e-07, eta0=0.5, l1_ratio=0.7700000001,
                               learning_rate='adaptive', n_jobs=-1,
                               penalty='elasticnet', random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001ECC599F160>)
2025-08-19 12:19:03,063:INFO:Checking exceptions
2025-08-19 12:19:03,063:INFO:Preloading libraries
2025-08-19 12:19:03,081:INFO:Set up data.
2025-08-19 12:19:03,147:INFO:Set up index.
